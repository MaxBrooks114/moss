{"ast":null,"code":"var _jsxFileName = \"/Users/maxbrooks/Development/code/moss/moss-client/src/components/ConcertCard.js\";\nimport React from 'react';\nimport { Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { getConcerts } from '../actions/concerts.js';\nimport { getConcertReviews } from '../actions/reviews.js';\n\nclass ConcertCard extends React.Component {\n  componentDidMount() {\n    this.props.concert && this.props.getConcertReviews(this.props.concert);\n  }\n\n  render() {\n    const _this$props = this.props,\n          concert = _this$props.concert,\n          userId = _this$props.userId;\n    return concert ? React.createElement(\"div\", {\n      className: \"ConcertCard\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24\n      },\n      __self: this\n    }, concert.artist.name), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25\n      },\n      __self: this\n    }, \"Date: \", concert.dateTime), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26\n      },\n      __self: this\n    }, \"Artist: \", concert.artist.name), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27\n      },\n      __self: this\n    }, \"Venue: \", concert.venue.name), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28\n      },\n      __self: this\n    }, \"Aggregated Score:\", concert.attributes.combined_review_score), React.createElement(Link, {\n      to: \"/concerts/\".concat(concert.id, \"/reviews\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29\n      },\n      __self: this\n    }, \" See all reviews for this concert\"), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29\n      },\n      __self: this\n    }), !!concert.attributes.reviews.find(rev => rev.user_id == userId) ? React.createElement(Link, {\n      to: \"/reviews/\".concat(concert.attributes.reviews.find(rev => rev.user_id == userId).id),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30\n      },\n      __self: this\n    }, \"Your Review\") : React.createElement(Link, {\n      to: \"/concerts/\".concat(concert.id, \"/reviews/new\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30\n      },\n      __self: this\n    }, \"Add a review\")) : React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    }, \" Maaaaan they ain't no concert here \");\n  }\n\n}\n\nconst mapStateToProps = state => {\n  const userId = state.currentUser ? state.currentUser.id : \"\";\n  return {\n    userId,\n    concerts: state.concerts\n  };\n};\n\nexport default connect(mapStateToProps, {\n  getConcerts,\n  getConcertReviews\n})(ConcertCard);","map":{"version":3,"sources":["/Users/maxbrooks/Development/code/moss/moss-client/src/components/ConcertCard.js"],"names":["React","Link","connect","getConcerts","getConcertReviews","ConcertCard","Component","componentDidMount","props","concert","render","userId","artist","name","dateTime","venue","attributes","combined_review_score","id","reviews","find","rev","user_id","mapStateToProps","state","currentUser","concerts"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,IAAR,QAAmB,kBAAnB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,WAAT,QAA4B,wBAA5B;AACA,SAASC,iBAAT,QAAkC,uBAAlC;;AAGA,MAAMC,WAAN,SAA0BL,KAAK,CAACM,SAAhC,CAA0C;AAIxCC,EAAAA,iBAAiB,GAAE;AACf,SAAKC,KAAL,CAAWC,OAAX,IAAsB,KAAKD,KAAL,CAAWJ,iBAAX,CAA6B,KAAKI,KAAL,CAAWC,OAAxC,CAAtB;AACH;;AAKDC,EAAAA,MAAM,GAAI;AAAA,wBACoB,KAAKF,KADzB;AAAA,UACAC,OADA,eACAA,OADA;AAAA,UACSE,MADT,eACSA,MADT;AAER,WACEF,OAAO,GACL;AAAK,MAAA,SAAS,EAAG,aAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAKA,OAAO,CAACG,MAAR,CAAeC,IAApB,CADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAAUJ,OAAO,CAACK,QAAlB,CAFF,EAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAAYL,OAAO,CAACG,MAAR,CAAeC,IAA3B,CAHF,EAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAWJ,OAAO,CAACM,KAAR,CAAcF,IAAzB,CAJF,EAKE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BAAqBJ,OAAO,CAACO,UAAR,CAAmBC,qBAAxC,CALF,EAME,oBAAC,IAAD;AAAM,MAAA,EAAE,sBAAgBR,OAAO,CAACS,EAAxB,aAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2CANF,EAMwF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MANxF,EAOG,CAAC,CAACT,OAAO,CAACO,UAAR,CAAmBG,OAAnB,CAA2BC,IAA3B,CAAgCC,GAAG,IAAIA,GAAG,CAACC,OAAJ,IAAeX,MAAtD,CAAF,GAAkE,oBAAC,IAAD;AAAM,MAAA,EAAE,qBAAcF,OAAO,CAACO,UAAR,CAAmBG,OAAnB,CAA2BC,IAA3B,CAAgCC,GAAG,IAAIA,GAAG,CAACC,OAAJ,IAAeX,MAAtD,EAA8DO,EAA5E,CAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAAlE,GAAgL,oBAAC,IAAD;AAAM,MAAA,EAAE,sBAAeT,OAAO,CAACS,EAAvB,iBAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAPnL,CADK,GAWM;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8CAZf;AAeC;;AA5BqC;;AA+B1C,MAAMK,eAAe,GAAGC,KAAK,IAAI;AAC/B,QAAMb,MAAM,GAAGa,KAAK,CAACC,WAAN,GAAoBD,KAAK,CAACC,WAAN,CAAkBP,EAAtC,GAA2C,EAA1D;AACA,SAAQ;AACNP,IAAAA,MADM;AAENe,IAAAA,QAAQ,EAAEF,KAAK,CAACE;AAFV,GAAR;AAKD,CAPD;;AAUA,eAAexB,OAAO,CAACqB,eAAD,EAAkB;AAACpB,EAAAA,WAAD;AAAcC,EAAAA;AAAd,CAAlB,CAAP,CAA2DC,WAA3D,CAAf","sourcesContent":["import React from 'react'\nimport {Link} from 'react-router-dom'\nimport { connect } from 'react-redux'\nimport { getConcerts } from '../actions/concerts.js'\nimport { getConcertReviews } from '../actions/reviews.js'\n\n\nclass ConcertCard extends React.Component {\n\n\n\n  componentDidMount(){\n      this.props.concert && this.props.getConcertReviews(this.props.concert)\n  }\n\n\n  comp\n\n  render () {\n    const { concert, userId } = this.props\n    return (\n      concert ?\n        <div className = \"ConcertCard\">\n          <h3>{concert.artist.name}</h3>\n          <p>Date: {concert.dateTime}</p>\n          <p>Artist: {concert.artist.name}</p>\n          <p>Venue: {concert.venue.name}</p>\n          <p>Aggregated Score:{concert.attributes.combined_review_score}</p>\n          <Link to ={`/concerts/${concert.id}/reviews`}> See all reviews for this concert</Link><br/>\n          {!!concert.attributes.reviews.find(rev => rev.user_id == userId) ? <Link to={`/reviews/${concert.attributes.reviews.find(rev => rev.user_id == userId).id}`}>Your Review</Link>: <Link to={`/concerts/${concert.id}/reviews/new`}>Add a review</Link> }\n\n\n          </div> : <div> Maaaaan they ain't no concert here </div>\n      )\n\n    }\n  }\n\nconst mapStateToProps = state => {\n  const userId = state.currentUser ? state.currentUser.id : \"\"\n  return ({\n    userId,\n    concerts: state.concerts\n\n  })\n}\n\n\nexport default connect(mapStateToProps, {getConcerts, getConcertReviews})(ConcertCard)\n"]},"metadata":{},"sourceType":"module"}