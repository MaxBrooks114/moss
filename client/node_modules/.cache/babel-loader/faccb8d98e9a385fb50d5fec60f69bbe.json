{"ast":null,"code":"var _jsxFileName = \"/Users/maxbrooks/Development/code/moss/moss-client/src/components/reviews/ReviewCard.js\";\nimport React from 'react';\nimport { Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport { getUserReviews } from '../.././actions/reviews/reviews';\nimport Card from 'react-bootstrap/Card';\nimport Button from 'react-bootstrap/Button';\nimport ListGroup from 'react-bootstrap/ListGroup';\nimport { LinkContainer } from 'react-router-bootstrap';\n\nconst ReviewCard = ({\n  review,\n  currentUserId,\n  ownProps,\n  getUserReviews\n}) => {\n  return review ? React.createElement(Card, {\n    bg: \"secondary\",\n    text: \"black\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  }, React.createElement(Card.Body, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }, React.createElement(Card.Title, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }, review.attributes.user.username, \"'s review of \", review.attributes.concert.name, React.createElement(LinkContainer, {\n    to: \"/concerts/\".concat(review.attributes.concert.id),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }, React.createElement(Button, {\n    variant: \"success\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }, \" See This Concert \")), \" \"), React.createElement(ListGroup, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }, React.createElement(ListGroup.Item, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }, \"Performance: \", review.attributes.set_score, \"/5\"), React.createElement(ListGroup.Item, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }, \"Venue: \", review.attributes.venue_score, \"/5\"), React.createElement(ListGroup.Item, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }, \"Sound: \", review.attributes.sound_score, \"/5\"), React.createElement(ListGroup.Item, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }, \"Set: \", review.attributes.set_score, \"/5\"), React.createElement(ListGroup.Item, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }, \"Price: \", review.attributes.price), React.createElement(ListGroup.Item, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }, \" \", review.attributes.write_up), React.createElement(ListGroup.Item, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }, \"Final Score: \", review.attributes.final_score, \"/5\")), review.attributes.user.id == currentUserId ? React.createElement(LinkContainer, {\n    to: \"/reviews/\".concat(review.id, \"/edit\"),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }, React.createElement(Button, {\n    variant: \"success\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }, \"Edit your review\")) : \"\", React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }), React.createElement(LinkContainer, {\n    to: \"/users/\".concat(review.attributes.user.id, \"/reviews\"),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }, React.createElement(Button, {\n    variant: \"success\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }, \" See all of \", review.attributes.user.username, \"'s reviews\")))) : React.createElement(Card, {\n    bg: \"secondary\",\n    text: \"black\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }, \" Maaaaan they ain't no review here \");\n};\n\nconst mapStateToProps = (state, ownProps) => {\n  const currentUserId = state.currentUser ? state.currentUser.id : \"\";\n  return {\n    currentUserId\n  };\n};\n\nexport default withRouter(connect(mapStateToProps, {\n  getUserReviews\n})(ReviewCard));","map":{"version":3,"sources":["/Users/maxbrooks/Development/code/moss/moss-client/src/components/reviews/ReviewCard.js"],"names":["React","Link","connect","withRouter","getUserReviews","Card","Button","ListGroup","LinkContainer","ReviewCard","review","currentUserId","ownProps","attributes","user","username","concert","name","id","set_score","venue_score","sound_score","price","write_up","final_score","mapStateToProps","state","currentUser"],"mappings":"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","sourcesContent":["import React from 'react'\nimport {Link} from 'react-router-dom'\nimport { connect } from 'react-redux'\nimport { withRouter} from 'react-router-dom'\nimport { getUserReviews } from '../.././actions/reviews/reviews'\nimport Card from 'react-bootstrap/Card'\nimport Button from 'react-bootstrap/Button'\nimport ListGroup from 'react-bootstrap/ListGroup'\nimport { LinkContainer } from 'react-router-bootstrap'\n\n\nconst ReviewCard = ({ review, currentUserId, ownProps, getUserReviews }) => {\n\n\n\n  return (\n    review ?\n      <Card bg=\"secondary\" text=\"black\">\n        <Card.Body>\n          <Card.Title>{review.attributes.user.username}'s review of {review.attributes.concert.name}\n          <LinkContainer to={`/concerts/${review.attributes.concert.id}`}>\n            <Button variant=\"success\"> See This Concert </Button>\n          </LinkContainer> </Card.Title>\n          <ListGroup>\n            <ListGroup.Item>Performance: {review.attributes.set_score}/5</ListGroup.Item>\n            <ListGroup.Item>Venue: {review.attributes.venue_score}/5</ListGroup.Item>\n            <ListGroup.Item>Sound: {review.attributes.sound_score}/5</ListGroup.Item>\n            <ListGroup.Item>Set: {review.attributes.set_score}/5</ListGroup.Item>\n            <ListGroup.Item>Price: {review.attributes.price}</ListGroup.Item>\n            <ListGroup.Item> {review.attributes.write_up}</ListGroup.Item>\n            <ListGroup.Item>Final Score: {review.attributes.final_score}/5</ListGroup.Item>\n          </ListGroup>\n          {review.attributes.user.id == currentUserId ? <LinkContainer to={`/reviews/${review.id}/edit`}>\n            <Button variant=\"success\">Edit your review</Button>\n            </LinkContainer> : \"\"}<br/>\n          <LinkContainer to={`/users/${review.attributes.user.id}/reviews`}>\n            <Button variant=\"success\"> See all of {review.attributes.user.username}'s reviews</Button>\n          </LinkContainer>\n        </Card.Body>\n\n      </Card> : <Card bg=\"secondary\" text=\"black\"> Maaaaan they ain't no review here </Card>\n  )\n\n}\n\nconst mapStateToProps = (state, ownProps) => {\n  const currentUserId = state.currentUser ? state.currentUser.id : \"\"\n  return ({\n    currentUserId,\n\n  })\n}\n\nexport default withRouter(connect(mapStateToProps, {getUserReviews})(ReviewCard))\n"]},"metadata":{},"sourceType":"module"}