{"ast":null,"code":"var _jsxFileName = \"/Users/maxbrooks/Development/code/moss/moss-client/src/components/ConcertCard.js\";\nimport React from 'react';\nimport { Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { getConcerts, getConcert } from '../actions/concerts.js';\nimport { getConcertReviews } from '../actions/reviews.js';\n\nclass ConcertCard extends React.Component {\n  componentDidMount() {\n    this.props.getConcert(this.props.concert);\n  }\n\n  render() {\n    const _this$props = this.props,\n          concert = _this$props.concert,\n          userId = _this$props.userId,\n          saveConcert = _this$props.saveConcert;\n    return concert ? React.createElement(\"div\", {\n      className: \"ConcertCard\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21\n      },\n      __self: this\n    }, \"Date: \", concert.datetime), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22\n      },\n      __self: this\n    }, \"Artist: \", concert.lineup[0]), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23\n      },\n      __self: this\n    }, \"Venue: \", concert.venue.name), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24\n      },\n      __self: this\n    }, \"Aggregated Score: \"), React.createElement(Link, {\n      to: \"/concerts/\".concat(concert.id, \"/reviews\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25\n      },\n      __self: this\n    }, \" See all reviews for this concert\"), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25\n      },\n      __self: this\n    }), !!concert.reviews.find(rev => rev.attributes.user.id == userId) ? React.createElement(Link, {\n      to: \"/reviews/\".concat(concert.reviews.find(rev => rev.attributes.user.id == userId)),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26\n      },\n      __self: this\n    }, \"Your Review\") : React.createElement(Link, {\n      to: \"/concerts/\".concat(concert.id, \"/reviews/new\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26\n      },\n      __self: this\n    }, \"Add a review\")) : React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29\n      },\n      __self: this\n    }, \" Maaaaan they ain't no concert here \");\n  }\n\n}\n\nconst mapStateToProps = state => {\n  const userId = state.currentUser ? state.currentUser.id : \"\";\n  return {\n    userId,\n    concerts: state.concerts,\n    reviews: state.reviews\n  };\n};\n\nexport default connect(mapStateToProps, {\n  getConcerts,\n  getConcertReviews,\n  getConcert\n})(ConcertCard);","map":{"version":3,"sources":["/Users/maxbrooks/Development/code/moss/moss-client/src/components/ConcertCard.js"],"names":["React","Link","connect","getConcerts","getConcert","getConcertReviews","ConcertCard","Component","componentDidMount","props","concert","render","userId","saveConcert","datetime","lineup","venue","name","id","reviews","find","rev","attributes","user","mapStateToProps","state","currentUser","concerts"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,IAAR,QAAmB,kBAAnB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,WAAT,EAAsBC,UAAtB,QAAwC,wBAAxC;AACA,SAASC,iBAAT,QAAkC,uBAAlC;;AAGA,MAAMC,WAAN,SAA0BN,KAAK,CAACO,SAAhC,CAA0C;AAExCC,EAAAA,iBAAiB,GAAE;AACjB,SAAKC,KAAL,CAAWL,UAAX,CAAsB,KAAKK,KAAL,CAAWC,OAAjC;AACD;;AAIDC,EAAAA,MAAM,GAAI;AAAA,wBACiC,KAAKF,KADtC;AAAA,UACAC,OADA,eACAA,OADA;AAAA,UACSE,MADT,eACSA,MADT;AAAA,UACiBC,WADjB,eACiBA,WADjB;AAER,WACEH,OAAO,GACL;AAAK,MAAA,SAAS,EAAG,aAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAAUA,OAAO,CAACI,QAAlB,CADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAAYJ,OAAO,CAACK,MAAR,CAAe,CAAf,CAAZ,CAFF,EAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAWL,OAAO,CAACM,KAAR,CAAcC,IAAzB,CAHF,EAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BAJF,EAKE,oBAAC,IAAD;AAAM,MAAA,EAAE,sBAAgBP,OAAO,CAACQ,EAAxB,aAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2CALF,EAKwF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MALxF,EAMG,CAAC,CAACR,OAAO,CAACS,OAAR,CAAgBC,IAAhB,CAAqBC,GAAG,IAAIA,GAAG,CAACC,UAAJ,CAAeC,IAAf,CAAoBL,EAApB,IAA0BN,MAAtD,CAAF,GAAkE,oBAAC,IAAD;AAAM,MAAA,EAAE,qBAAcF,OAAO,CAACS,OAAR,CAAgBC,IAAhB,CAAqBC,GAAG,IAAIA,GAAG,CAACC,UAAJ,CAAeC,IAAf,CAAoBL,EAApB,IAA0BN,MAAtD,CAAd,CAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAAlE,GAA6K,oBAAC,IAAD;AAAM,MAAA,EAAE,sBAAeF,OAAO,CAACQ,EAAvB,iBAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBANhL,CADK,GAUM;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8CAXf;AAcC;;AAxBqC;;AA2B1C,MAAMM,eAAe,GAAGC,KAAK,IAAI;AAC/B,QAAMb,MAAM,GAAGa,KAAK,CAACC,WAAN,GAAoBD,KAAK,CAACC,WAAN,CAAkBR,EAAtC,GAA2C,EAA1D;AACA,SAAQ;AACNN,IAAAA,MADM;AAENe,IAAAA,QAAQ,EAAEF,KAAK,CAACE,QAFV;AAGNR,IAAAA,OAAO,EAAEM,KAAK,CAACN;AAHT,GAAR;AAOD,CATD;;AAYA,eAAejB,OAAO,CAACsB,eAAD,EAAkB;AAACrB,EAAAA,WAAD;AAAcE,EAAAA,iBAAd;AAAiCD,EAAAA;AAAjC,CAAlB,CAAP,CAAuEE,WAAvE,CAAf","sourcesContent":["import React from 'react'\nimport {Link} from 'react-router-dom'\nimport { connect } from 'react-redux'\nimport { getConcerts, getConcert } from '../actions/concerts.js'\nimport { getConcertReviews } from '../actions/reviews.js'\n\n\nclass ConcertCard extends React.Component {\n\n  componentDidMount(){\n    this.props.getConcert(this.props.concert)\n  }\n\n\n\n  render () {\n    const { concert, userId, saveConcert } = this.props\n    return (\n      concert ?\n        <div className = \"ConcertCard\">\n          <p>Date: {concert.datetime}</p>\n          <p>Artist: {concert.lineup[0]}</p>\n          <p>Venue: {concert.venue.name}</p>\n          <p>Aggregated Score: {}</p>\n          <Link to ={`/concerts/${concert.id}/reviews`}> See all reviews for this concert</Link><br/>\n          {!!concert.reviews.find(rev => rev.attributes.user.id == userId) ? <Link to={`/reviews/${concert.reviews.find(rev => rev.attributes.user.id == userId)}`}>Your Review</Link>: <Link to={`/concerts/${concert.id}/reviews/new`}>Add a review</Link> }\n\n\n          </div> : <div> Maaaaan they ain't no concert here </div>\n      )\n\n    }\n  }\n\nconst mapStateToProps = state => {\n  const userId = state.currentUser ? state.currentUser.id : \"\"\n  return ({\n    userId,\n    concerts: state.concerts,\n    reviews: state.reviews,\n\n\n  })\n}\n\n\nexport default connect(mapStateToProps, {getConcerts, getConcertReviews, getConcert})(ConcertCard)\n"]},"metadata":{},"sourceType":"module"}