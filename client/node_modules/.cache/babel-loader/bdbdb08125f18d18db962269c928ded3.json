{"ast":null,"code":"var _jsxFileName = \"/Users/maxbrooks/Development/Projects/moss/moss-client/src/components/reviews/ReviewCard.js\";\nimport React from 'react';\nimport { Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport { getUserReviews } from '../.././actions/reviews/reviews';\nimport Card from 'react-bootstrap/Card';\nimport Button from 'react-bootstrap/Button';\nimport ListGroup from 'react-bootstrap/ListGroup';\nimport { LinkContainer } from 'react-router-bootstrap';\n\nconst ReviewCard = ({\n  review,\n  currentUserId,\n  ownProps,\n  getUserReviews\n}) => {\n  const capitalize = s => {\n    if (typeof s !== 'string') return '';\n    return s.charAt(0).toUpperCase() + s.slice(1);\n  };\n\n  return review ? /*#__PURE__*/React.createElement(Card, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Card.Body, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Card.Title, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 11\n    }\n  }, capitalize(review.attributes.user.username), \"'s review of \", review.attributes.concert.name, /*#__PURE__*/React.createElement(LinkContainer, {\n    to: `/concerts/${review.attributes.concert.id}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 13\n    }\n  }, \" See This Concert \")), \" \"), /*#__PURE__*/React.createElement(ListGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(ListGroup.Item, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }\n  }, \"Performance: \", review.attributes.set_score, \"/5\"), /*#__PURE__*/React.createElement(ListGroup.Item, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }\n  }, \"Venue: \", review.attributes.venue_score, \"/5\"), /*#__PURE__*/React.createElement(ListGroup.Item, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }\n  }, \"Sound: \", review.attributes.sound_score, \"/5\"), /*#__PURE__*/React.createElement(ListGroup.Item, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }\n  }, \"Set: \", review.attributes.set_score, \"/5\"), /*#__PURE__*/React.createElement(ListGroup.Item, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }\n  }, \"Price: \", review.attributes.price), /*#__PURE__*/React.createElement(ListGroup.Item, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }\n  }, \" \", review.attributes.write_up), /*#__PURE__*/React.createElement(ListGroup.Item, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }\n  }, \"Final Score: \", review.attributes.final_score, \"/5\")), review.attributes.user.id == currentUserId ? /*#__PURE__*/React.createElement(LinkContainer, {\n    to: `/reviews/${review.id}/edit`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 57\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }\n  }, \"Edit your review\")) : \"\", /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 35\n    }\n  }), /*#__PURE__*/React.createElement(LinkContainer, {\n    to: `/users/${review.attributes.user.id}/reviews`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }\n  }, \" See all of \", review.attributes.user.username, \"'s reviews\")))) : /*#__PURE__*/React.createElement(Card, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 17\n    }\n  }, \" Maaaaan they ain't no review here \");\n};\n\nconst mapStateToProps = (state, ownProps) => {\n  const currentUserId = state.currentUser ? state.currentUser.id : \"\";\n  return {\n    currentUserId\n  };\n};\n\nexport default withRouter(connect(mapStateToProps, {\n  getUserReviews\n})(ReviewCard));","map":{"version":3,"sources":["/Users/maxbrooks/Development/Projects/moss/moss-client/src/components/reviews/ReviewCard.js"],"names":["React","Link","connect","withRouter","getUserReviews","Card","Button","ListGroup","LinkContainer","ReviewCard","review","currentUserId","ownProps","capitalize","s","charAt","toUpperCase","slice","attributes","user","username","concert","name","id","set_score","venue_score","sound_score","price","write_up","final_score","mapStateToProps","state","currentUser"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,IAAR,QAAmB,kBAAnB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,UAAT,QAA0B,kBAA1B;AACA,SAASC,cAAT,QAA+B,iCAA/B;AACA,OAAOC,IAAP,MAAiB,sBAAjB;AACA,OAAOC,MAAP,MAAmB,wBAAnB;AACA,OAAOC,SAAP,MAAsB,2BAAtB;AACA,SAASC,aAAT,QAA8B,wBAA9B;;AAGA,MAAMC,UAAU,GAAG,CAAC;AAAEC,EAAAA,MAAF;AAAUC,EAAAA,aAAV;AAAyBC,EAAAA,QAAzB;AAAmCR,EAAAA;AAAnC,CAAD,KAAyD;AAE1E,QAAMS,UAAU,GAAIC,CAAD,IAAO;AAC1B,QAAI,OAAOA,CAAP,KAAa,QAAjB,EAA2B,OAAO,EAAP;AAC3B,WAAOA,CAAC,CAACC,MAAF,CAAS,CAAT,EAAYC,WAAZ,KAA4BF,CAAC,CAACG,KAAF,CAAQ,CAAR,CAAnC;AACD,GAHC;;AAMA,SACEP,MAAM,gBACJ,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,IAAD,CAAM,IAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAaG,UAAU,CAACH,MAAM,CAACQ,UAAP,CAAkBC,IAAlB,CAAuBC,QAAxB,CAAvB,mBAAuEV,MAAM,CAACQ,UAAP,CAAkBG,OAAlB,CAA0BC,IAAjG,eACA,oBAAC,aAAD;AAAe,IAAA,EAAE,EAAG,aAAYZ,MAAM,CAACQ,UAAP,CAAkBG,OAAlB,CAA0BE,EAAG,EAA7D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BADF,CADA,MADF,eAKE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,SAAD,CAAW,IAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAA8Bb,MAAM,CAACQ,UAAP,CAAkBM,SAAhD,OADF,eAEE,oBAAC,SAAD,CAAW,IAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAAwBd,MAAM,CAACQ,UAAP,CAAkBO,WAA1C,OAFF,eAGE,oBAAC,SAAD,CAAW,IAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAAwBf,MAAM,CAACQ,UAAP,CAAkBQ,WAA1C,OAHF,eAIE,oBAAC,SAAD,CAAW,IAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAsBhB,MAAM,CAACQ,UAAP,CAAkBM,SAAxC,OAJF,eAKE,oBAAC,SAAD,CAAW,IAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAAwBd,MAAM,CAACQ,UAAP,CAAkBS,KAA1C,CALF,eAME,oBAAC,SAAD,CAAW,IAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAkBjB,MAAM,CAACQ,UAAP,CAAkBU,QAApC,CANF,eAOE,oBAAC,SAAD,CAAW,IAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAA8BlB,MAAM,CAACQ,UAAP,CAAkBW,WAAhD,OAPF,CALF,EAcGnB,MAAM,CAACQ,UAAP,CAAkBC,IAAlB,CAAuBI,EAAvB,IAA6BZ,aAA7B,gBAA6C,oBAAC,aAAD;AAAe,IAAA,EAAE,EAAG,YAAWD,MAAM,CAACa,EAAG,OAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAC5C,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAD4C,CAA7C,GAEoB,EAhBvB,eAgB0B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAhB1B,eAiBE,oBAAC,aAAD;AAAe,IAAA,EAAE,EAAG,UAASb,MAAM,CAACQ,UAAP,CAAkBC,IAAlB,CAAuBI,EAAG,UAAvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAAqBb,MAAM,CAACQ,UAAP,CAAkBC,IAAlB,CAAuBC,QAA5C,eADF,CAjBF,CADF,CADI,gBAwBM,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2CAzBd;AA4BD,CApCD;;AAsCA,MAAMU,eAAe,GAAG,CAACC,KAAD,EAAQnB,QAAR,KAAqB;AAC3C,QAAMD,aAAa,GAAGoB,KAAK,CAACC,WAAN,GAAoBD,KAAK,CAACC,WAAN,CAAkBT,EAAtC,GAA2C,EAAjE;AACA,SAAQ;AACNZ,IAAAA;AADM,GAAR;AAID,CAND;;AAQA,eAAeR,UAAU,CAACD,OAAO,CAAC4B,eAAD,EAAkB;AAAC1B,EAAAA;AAAD,CAAlB,CAAP,CAA2CK,UAA3C,CAAD,CAAzB","sourcesContent":["import React from 'react'\nimport {Link} from 'react-router-dom'\nimport { connect } from 'react-redux'\nimport { withRouter} from 'react-router-dom'\nimport { getUserReviews } from '../.././actions/reviews/reviews'\nimport Card from 'react-bootstrap/Card'\nimport Button from 'react-bootstrap/Button'\nimport ListGroup from 'react-bootstrap/ListGroup'\nimport { LinkContainer } from 'react-router-bootstrap'\n\n\nconst ReviewCard = ({ review, currentUserId, ownProps, getUserReviews }) => {\n\n  const capitalize = (s) => {\n  if (typeof s !== 'string') return ''\n  return s.charAt(0).toUpperCase() + s.slice(1)\n}\n\n\n  return (\n    review ?\n      <Card>\n        <Card.Body>\n          <Card.Title>{capitalize(review.attributes.user.username)}'s review of {review.attributes.concert.name}\n          <LinkContainer to={`/concerts/${review.attributes.concert.id}`}>\n            <Button> See This Concert </Button>\n          </LinkContainer> </Card.Title>\n          <ListGroup>\n            <ListGroup.Item>Performance: {review.attributes.set_score}/5</ListGroup.Item>\n            <ListGroup.Item>Venue: {review.attributes.venue_score}/5</ListGroup.Item>\n            <ListGroup.Item>Sound: {review.attributes.sound_score}/5</ListGroup.Item>\n            <ListGroup.Item>Set: {review.attributes.set_score}/5</ListGroup.Item>\n            <ListGroup.Item>Price: {review.attributes.price}</ListGroup.Item>\n            <ListGroup.Item> {review.attributes.write_up}</ListGroup.Item>\n            <ListGroup.Item>Final Score: {review.attributes.final_score}/5</ListGroup.Item>\n          </ListGroup>\n          {review.attributes.user.id == currentUserId ? <LinkContainer to={`/reviews/${review.id}/edit`}>\n            <Button>Edit your review</Button>\n            </LinkContainer> : \"\"}<br/>\n          <LinkContainer to={`/users/${review.attributes.user.id}/reviews`}>\n            <Button> See all of {review.attributes.user.username}'s reviews</Button>\n          </LinkContainer>\n        </Card.Body>\n\n      </Card> : <Card> Maaaaan they ain't no review here </Card>\n  )\n\n}\n\nconst mapStateToProps = (state, ownProps) => {\n  const currentUserId = state.currentUser ? state.currentUser.id : \"\"\n  return ({\n    currentUserId\n\n  })\n}\n\nexport default withRouter(connect(mapStateToProps, {getUserReviews})(ReviewCard))\n"]},"metadata":{},"sourceType":"module"}