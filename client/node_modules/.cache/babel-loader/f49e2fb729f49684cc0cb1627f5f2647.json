{"ast":null,"code":"var _jsxFileName = \"/Users/maxbrooks/Development/code/moss/moss-client/src/components/reviews/ReviewsList.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { withRouter } from 'react-router-dom';\nimport Card from 'react-bootstrap/Card';\nimport Button from 'react-bootstrap/Button';\nimport { LinkContainer } from 'react-router-bootstrap';\n\nconst ReviewsList = ({\n  reviews\n}) => {\n  const capitalize = s => {\n    if (typeof s !== 'string') return '';\n    return s.charAt(0).toUpperCase() + s.slice(1);\n  };\n\n  return React.createElement(\"div\", {\n    className: \"row\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }, reviews.map(r => React.createElement(Card, {\n    key: r.id,\n    className: \"col-md-3\",\n    text: \"black\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }, React.createElement(Card.Body, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }, React.createElement(Card.Title, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }, r.attributes.user.username.capitalize, \"'s review of \", r.attributes.concert.name), React.createElement(LinkContainer, {\n    to: \"/reviews/\".concat(r.id),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }, React.createElement(Button, {\n    variant: \"success\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }, \"See This Review\"))))));\n};\n\nconst mapStateToProps = (state, ownProps) => {\n  return {\n    reviews: state.reviews\n  };\n};\n\nexport default withRouter(connect(mapStateToProps)(ReviewsList));","map":{"version":3,"sources":["/Users/maxbrooks/Development/code/moss/moss-client/src/components/reviews/ReviewsList.js"],"names":["React","connect","Link","withRouter","Card","Button","LinkContainer","ReviewsList","reviews","capitalize","s","charAt","toUpperCase","slice","map","r","id","attributes","user","username","concert","name","mapStateToProps","state","ownProps"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,SAASC,UAAT,QAA2B,kBAA3B;AACA,OAAOC,IAAP,MAAiB,sBAAjB;AACA,OAAOC,MAAP,MAAmB,wBAAnB;AACA,SAASC,aAAT,QAA8B,wBAA9B;;AAKA,MAAMC,WAAW,GAAG,CAAC;AAACC,EAAAA;AAAD,CAAD,KAAe;AAEjC,QAAMC,UAAU,GAAIC,CAAD,IAAO;AAC1B,QAAI,OAAOA,CAAP,KAAa,QAAjB,EAA2B,OAAO,EAAP;AAC3B,WAAOA,CAAC,CAACC,MAAF,CAAS,CAAT,EAAYC,WAAZ,KAA4BF,CAAC,CAACG,KAAF,CAAQ,CAAR,CAAnC;AACD,GAHC;;AAKA,SAEI;AAAK,IAAA,SAAS,EAAE,KAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACCL,OAAO,CAACM,GAAR,CAAYC,CAAC,IACZ,oBAAC,IAAD;AAAM,IAAA,GAAG,EAAEA,CAAC,CAACC,EAAb;AAAiB,IAAA,SAAS,EAAC,UAA3B;AAAsC,IAAA,IAAI,EAAC,OAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD,CAAM,IAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAaD,CAAC,CAACE,UAAF,CAAaC,IAAb,CAAkBC,QAAlB,CAA2BV,UAAxC,mBAAiEM,CAAC,CAACE,UAAF,CAAaG,OAAb,CAAqBC,IAAtF,CADF,EAEE,oBAAC,aAAD;AAAe,IAAA,EAAE,qBAAcN,CAAC,CAACC,EAAhB,CAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,MAAD;AAAQ,IAAA,OAAO,EAAC,SAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBADF,CAFF,CADF,CADD,CADD,CAFJ;AAcD,CArBD;;AA0BA,MAAMM,eAAe,GAAG,CAACC,KAAD,EAAQC,QAAR,KAAqB;AAC3C,SAAO;AAELhB,IAAAA,OAAO,EAAEe,KAAK,CAACf;AAFV,GAAP;AAKD,CAND;;AAQA,eAAeL,UAAU,CAACF,OAAO,CAACqB,eAAD,CAAP,CAAyBf,WAAzB,CAAD,CAAzB","sourcesContent":["import React from 'react'\nimport { connect } from 'react-redux'\nimport { Link } from 'react-router-dom'\nimport { withRouter } from 'react-router-dom'\nimport Card from 'react-bootstrap/Card'\nimport Button from 'react-bootstrap/Button'\nimport { LinkContainer } from 'react-router-bootstrap';\n\n\n\n\nconst ReviewsList = ({reviews}) => {\n\n  const capitalize = (s) => {\n  if (typeof s !== 'string') return ''\n  return s.charAt(0).toUpperCase() + s.slice(1)\n}\n\n  return (\n\n      <div className ='row'>\n      {reviews.map(r =>\n        <Card key={r.id} className=\"col-md-3\" text=\"black\">\n          <Card.Body>\n            <Card.Title>{r.attributes.user.username.capitalize}'s review of {r.attributes.concert.name}</Card.Title>\n            <LinkContainer to={`/reviews/${r.id}`}>\n              <Button variant=\"success\">See This Review</Button>\n            </LinkContainer>\n          </Card.Body>\n        </Card>)}\n  </div>\n )\n}\n\n\n\n\nconst mapStateToProps = (state, ownProps) => {\n  return {\n\n    reviews: state.reviews\n\n  }\n}\n\nexport default withRouter(connect(mapStateToProps)(ReviewsList))\n"]},"metadata":{},"sourceType":"module"}