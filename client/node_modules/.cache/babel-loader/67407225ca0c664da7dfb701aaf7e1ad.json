{"ast":null,"code":"import _slicedToArray from \"/Users/maxbrooks/Development/code/moss/moss-client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/maxbrooks/Development/code/moss/moss-client/src/components/ConcertCard.js\";\nimport React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { getConcerts, getConcert } from '../actions/concerts.js';\nimport { getConcertReviews } from '../actions/reviews.js';\nimport { withRouter } from 'react-router-dom';\n\nconst ConcertCard = ({\n  theConcert,\n  theConcertReviews,\n  currentUserId,\n  getConcert,\n  concertId,\n  getConcertReviews\n}) => {\n  const _useState = useState({}),\n        _useState2 = _slicedToArray(_useState, 2),\n        concert = _useState2[0],\n        setConcert = _useState2[1];\n\n  const _useState3 = useState({}),\n        _useState4 = _slicedToArray(_useState3, 2),\n        concertReviews = _useState4[0],\n        setConcertReviews = _useState4[1];\n\n  useEffect(() => {\n    getConcert(concertId);\n    getConcertReviews(concertId);\n  }, [concertId, getConcert, getConcertReviews]);\n  return concert ? React.createElement(\"div\", {\n    className: \"ConcertCard\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }, \"Date: \", theConcert.date), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }, \"Artist: \", theConcert.artist), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }, \"Venue: \", theConcert.venue), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }, \"Aggregated Score: \", theConcert.combined_review_score), React.createElement(Link, {\n    to: \"/concerts/\".concat(theConcert.id, \"/reviews\"),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }, \" See all reviews for this concert\"), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }), !!theConcertReviews.find(review => review.user.id == currentUserId)) : React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }, \" Maaaaan they ain't no concert here \");\n};\n\nconst mapStateToProps = (state, ownProps) => {\n  const currentUserId = state.currentUser ? state.currentUser.id : \"\";\n  const concertId = ownProps.match.params.id;\n  return {\n    currentUserId,\n    concertId,\n    concerts: state.concerts,\n    reviews: state.reviews,\n    theConcert: state.concert,\n    theConcertReviews: state.concertReviews\n  };\n};\n\nexport default withRouter(connect(mapStateToProps, {\n  getConcerts,\n  getConcertReviews,\n  getConcert\n})(ConcertCard));","map":{"version":3,"sources":["/Users/maxbrooks/Development/code/moss/moss-client/src/components/ConcertCard.js"],"names":["React","useState","useEffect","Link","connect","getConcerts","getConcert","getConcertReviews","withRouter","ConcertCard","theConcert","theConcertReviews","currentUserId","concertId","concert","setConcert","concertReviews","setConcertReviews","date","artist","venue","combined_review_score","id","find","review","user","mapStateToProps","state","ownProps","currentUser","match","params","concerts","reviews"],"mappings":";;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAA0C,OAA1C;AACA,SAAQC,IAAR,QAAmB,kBAAnB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,WAAT,EAAsBC,UAAtB,QAAwC,wBAAxC;AACA,SAASC,iBAAT,QAAkC,uBAAlC;AACA,SAASC,UAAT,QAA2B,kBAA3B;;AAGA,MAAMC,WAAW,GAAG,CAAC;AAACC,EAAAA,UAAD;AAAaC,EAAAA,iBAAb;AAAgCC,EAAAA,aAAhC;AAA+CN,EAAAA,UAA/C;AAA2DO,EAAAA,SAA3D;AAAsEN,EAAAA;AAAtE,CAAD,KAA+F;AAAA,oBAC/EN,QAAQ,CAAC,EAAD,CADuE;AAAA;AAAA,QACtGa,OADsG;AAAA,QAC7FC,UAD6F;;AAAA,qBAEjEd,QAAQ,CAAC,EAAD,CAFyD;AAAA;AAAA,QAEtGe,cAFsG;AAAA,QAEtFC,iBAFsF;;AAG7Gf,EAAAA,SAAS,CAAC,MAAM;AACZI,IAAAA,UAAU,CAACO,SAAD,CAAV;AACAN,IAAAA,iBAAiB,CAACM,SAAD,CAAjB;AACD,GAHM,EAGL,CAACA,SAAD,EAAYP,UAAZ,EAAwBC,iBAAxB,CAHK,CAAT;AAIF,SACEO,OAAO,GACL;AAAK,IAAA,SAAS,EAAG,aAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAAUJ,UAAU,CAACQ,IAArB,CADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAAYR,UAAU,CAACS,MAAvB,CAFF,EAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAAWT,UAAU,CAACU,KAAtB,CAHF,EAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BAAsBV,UAAU,CAACW,qBAAjC,CAJF,EAKE,oBAAC,IAAD;AAAM,IAAA,EAAE,sBAAgBX,UAAU,CAACY,EAA3B,aAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yCALF,EAK2F;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAL3F,EAMG,CAAC,CAACX,iBAAiB,CAACY,IAAlB,CAAuBC,MAAM,IAAIA,MAAM,CAACC,IAAP,CAAYH,EAAZ,IAAkBV,aAAnD,CANL,CADK,GAQM;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4CATf;AAYC,CAnBL;;AAqBA,MAAMc,eAAe,GAAG,CAACC,KAAD,EAAQC,QAAR,KAAqB;AAC3C,QAAMhB,aAAa,GAAGe,KAAK,CAACE,WAAN,GAAoBF,KAAK,CAACE,WAAN,CAAkBP,EAAtC,GAA2C,EAAjE;AACA,QAAMT,SAAS,GAAGe,QAAQ,CAACE,KAAT,CAAeC,MAAf,CAAsBT,EAAxC;AACA,SAAQ;AACNV,IAAAA,aADM;AAENC,IAAAA,SAFM;AAGNmB,IAAAA,QAAQ,EAAEL,KAAK,CAACK,QAHV;AAINC,IAAAA,OAAO,EAAEN,KAAK,CAACM,OAJT;AAKNvB,IAAAA,UAAU,EAAEiB,KAAK,CAACb,OALZ;AAMNH,IAAAA,iBAAiB,EAAEgB,KAAK,CAACX;AANnB,GAAR;AAWD,CAdD;;AAiBA,eAAeR,UAAU,CAACJ,OAAO,CAACsB,eAAD,EAAkB;AAACrB,EAAAA,WAAD;AAAcE,EAAAA,iBAAd;AAAiCD,EAAAA;AAAjC,CAAlB,CAAP,CAAuEG,WAAvE,CAAD,CAAzB","sourcesContent":["import React, {useState, useEffect } from 'react'\nimport {Link} from 'react-router-dom'\nimport { connect } from 'react-redux'\nimport { getConcerts, getConcert } from '../actions/concerts.js'\nimport { getConcertReviews } from '../actions/reviews.js'\nimport { withRouter } from 'react-router-dom'\n\n\nconst ConcertCard = ({theConcert, theConcertReviews, currentUserId, getConcert, concertId, getConcertReviews }) => {\n      const [concert, setConcert] = useState({});\n      const [concertReviews, setConcertReviews] = useState({})\n      useEffect(() => {\n          getConcert(concertId);\n          getConcertReviews(concertId)\n        },[concertId, getConcert, getConcertReviews]);\n    return (\n      concert ?\n        <div className = \"ConcertCard\">\n          <p>Date: {theConcert.date}</p>\n          <p>Artist: {theConcert.artist}</p>\n          <p>Venue: {theConcert.venue}</p>\n          <p>Aggregated Score: {theConcert.combined_review_score}</p>\n          <Link to ={`/concerts/${theConcert.id}/reviews`}> See all reviews for this concert</Link><br/>\n          {!!theConcertReviews.find(review => review.user.id == currentUserId)}\n          </div> : <div> Maaaaan they ain't no concert here </div>\n      )\n\n    }\n\nconst mapStateToProps = (state, ownProps) => {\n  const currentUserId = state.currentUser ? state.currentUser.id : \"\"\n  const concertId = ownProps.match.params.id\n  return ({\n    currentUserId,\n    concertId,\n    concerts: state.concerts,\n    reviews: state.reviews,\n    theConcert: state.concert,\n    theConcertReviews: state.concertReviews\n\n\n\n  })\n}\n\n\nexport default withRouter(connect(mapStateToProps, {getConcerts, getConcertReviews, getConcert})(ConcertCard))\n"]},"metadata":{},"sourceType":"module"}