{"ast":null,"code":"import _defineProperty from \"/Users/maxbrooks/Development/code/moss/moss-client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/Users/maxbrooks/Development/code/moss/moss-client/src/containers/Reviews/EditReviewFormWrapper.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React from 'react';\nimport ReviewForm from '../.././components/reviews/ReviewForm';\nimport { updateReview, deleteReview } from '../.././actions/reviews/reviews';\nimport { setFormDataForEdit, resetReviewForm } from '../.././actions/reviews/reviewForm';\nimport { connect } from 'react-redux';\nimport Container from 'react-bootstrap/Container';\n\nclass EditReviewFormWrapper extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    this.handleSubmit = formData => {\n      const _this$props = this.props,\n            updateReview = _this$props.updateReview,\n            review = _this$props.review,\n            history = _this$props.history;\n      updateReview(_objectSpread({}, formData, {\n        reviewId: review.id\n      }), history);\n    };\n  }\n\n  componentDidMount() {\n    this.props.review && this.props.setFormDataForEdit(this.props.review);\n  }\n\n  componentDidUpdate(prevProps) {\n    this.props.review && !prevProps.review && this.props.setFormDataForEdit(this.props.review);\n  }\n\n  componentWillUnmount() {\n    this.props.resetReviewForm();\n  }\n\n  render() {\n    const _this$props2 = this.props,\n          history = _this$props2.history,\n          deleteReview = _this$props2.deleteReview,\n          review = _this$props2.review;\n    const reviewId = review ? review.id : null;\n    const concertId = review ? review.attributes.concert.id : null;\n    const userId = review ? review.attributes.user.id : null;\n    return React.createElement(React.Fragment, null, React.createElement(ReviewForm, {\n      editMode: true,\n      handleSubmit: this.handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      onClick: () => deleteReview(reviewId, history, concertId, userId),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }, \"Delete this review\"));\n  }\n\n}\n\n;\nexport default connect(null, {\n  updateReview,\n  setFormDataForEdit,\n  resetReviewForm,\n  deleteReview\n})(EditReviewFormWrapper);","map":{"version":3,"sources":["/Users/maxbrooks/Development/code/moss/moss-client/src/containers/Reviews/EditReviewFormWrapper.js"],"names":["React","ReviewForm","updateReview","deleteReview","setFormDataForEdit","resetReviewForm","connect","Container","EditReviewFormWrapper","Component","handleSubmit","formData","props","review","history","reviewId","id","componentDidMount","componentDidUpdate","prevProps","componentWillUnmount","render","concertId","attributes","concert","userId","user"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,UAAP,MAAuB,uCAAvB;AACA,SAASC,YAAT,EAAuBC,YAAvB,QAA2C,iCAA3C;AACA,SAASC,kBAAT,EAA6BC,eAA7B,QAAoD,oCAApD;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,SAAP,MAAsB,2BAAtB;;AAEA,MAAMC,qBAAN,SAAoCR,KAAK,CAACS,SAA1C,CAAoD;AAAA;AAAA;;AAAA,SAalDC,YAbkD,GAalCC,QAAD,IAAc;AAAA,0BACe,KAAKC,KADpB;AAAA,YACnBV,YADmB,eACnBA,YADmB;AAAA,YACLW,MADK,eACLA,MADK;AAAA,YACGC,OADH,eACGA,OADH;AAE3BZ,MAAAA,YAAY,mBACPS,QADO;AAEVI,QAAAA,QAAQ,EAAEF,MAAM,CAACG;AAFP,UAGTF,OAHS,CAAZ;AAID,KAnBiD;AAAA;;AAClDG,EAAAA,iBAAiB,GAAE;AACjB,SAAKL,KAAL,CAAWC,MAAX,IAAqB,KAAKD,KAAL,CAAWR,kBAAX,CAA8B,KAAKQ,KAAL,CAAWC,MAAzC,CAArB;AACD;;AAEDK,EAAAA,kBAAkB,CAACC,SAAD,EAAY;AAC5B,SAAKP,KAAL,CAAWC,MAAX,IAAqB,CAACM,SAAS,CAACN,MAAhC,IAA0C,KAAKD,KAAL,CAAWR,kBAAX,CAA8B,KAAKQ,KAAL,CAAWC,MAAzC,CAA1C;AACD;;AAEDO,EAAAA,oBAAoB,GAAG;AACrB,SAAKR,KAAL,CAAWP,eAAX;AACD;;AAUDgB,EAAAA,MAAM,GAAG;AAAA,yBACmC,KAAKT,KADxC;AAAA,UACCE,OADD,gBACCA,OADD;AAAA,UACUX,YADV,gBACUA,YADV;AAAA,UACwBU,MADxB,gBACwBA,MADxB;AAEP,UAAME,QAAQ,GAAGF,MAAM,GAAGA,MAAM,CAACG,EAAV,GAAe,IAAtC;AACA,UAAMM,SAAS,GAAGT,MAAM,GAAGA,MAAM,CAACU,UAAP,CAAkBC,OAAlB,CAA0BR,EAA7B,GAAkC,IAA1D;AACA,UAAMS,MAAM,GAAGZ,MAAM,GAAGA,MAAM,CAACU,UAAP,CAAkBG,IAAlB,CAAuBV,EAA1B,GAA+B,IAApD;AAEA,WAAQ,0CACE,oBAAC,UAAD;AAAY,MAAA,QAAQ,MAApB;AAAqB,MAAA,YAAY,EAAE,KAAKN,YAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,EAGE;AAAQ,MAAA,OAAO,EAAE,MAAIP,YAAY,CAACY,QAAD,EAAWD,OAAX,EAAoBQ,SAApB,EAA+BG,MAA/B,CAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BAHF,CAAR;AAKD;;AAhCiD;;AAiCnD;AAED,eAAenB,OAAO,CAAC,IAAD,EAAO;AAAEJ,EAAAA,YAAF;AAAgBE,EAAAA,kBAAhB;AAAoCC,EAAAA,eAApC;AAAqDF,EAAAA;AAArD,CAAP,CAAP,CAAmFK,qBAAnF,CAAf","sourcesContent":["import React from 'react';\nimport ReviewForm from '../.././components/reviews/ReviewForm'\nimport { updateReview, deleteReview } from '../.././actions/reviews/reviews'\nimport { setFormDataForEdit, resetReviewForm } from '../.././actions/reviews/reviewForm'\nimport { connect } from 'react-redux'\nimport Container from 'react-bootstrap/Container'\n\nclass EditReviewFormWrapper extends React.Component {\n  componentDidMount(){\n    this.props.review && this.props.setFormDataForEdit(this.props.review)\n  }\n\n  componentDidUpdate(prevProps) {\n    this.props.review && !prevProps.review && this.props.setFormDataForEdit(this.props.review)\n  }\n\n  componentWillUnmount() {\n    this.props.resetReviewForm()\n  }\n\n  handleSubmit = (formData) => {\n    const { updateReview, review, history } = this.props\n    updateReview({\n      ...formData,\n      reviewId: review.id\n    }, history)\n  }\n\n  render() {\n    const { history, deleteReview, review } = this.props\n    const reviewId = review ? review.id : null\n    const concertId = review ? review.attributes.concert.id : null\n    const userId = review ? review.attributes.user.id : null\n\n    return  <>\n              <ReviewForm editMode handleSubmit={this.handleSubmit} />\n              <br/>\n              <button onClick={()=>deleteReview(reviewId, history, concertId, userId)}>Delete this review</button>\n            </>\n  }\n};\n\nexport default connect(null, { updateReview, setFormDataForEdit, resetReviewForm, deleteReview })(EditReviewFormWrapper);\n"]},"metadata":{},"sourceType":"module"}