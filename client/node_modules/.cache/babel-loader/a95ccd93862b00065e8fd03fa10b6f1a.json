{"ast":null,"code":"var _jsxFileName = \"/Users/maxbrooks/Development/code/moss/moss-client/src/components/ConcertCard.js\";\nimport React from 'react';\nimport { Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { getConcerts, getConcert } from '../actions/concerts.js';\nimport { getConcertReviews } from '../actions/reviews.js';\nimport { withRouter } from 'react-router-dom';\n\nclass ConcertCard extends React.Component {\n  componentDidMount(ownProps) {\n    this.props.getConcert(ownProps.params.match.id);\n  }\n\n  render() {\n    const _this$props = this.props,\n          concert = _this$props.concert,\n          userId = _this$props.userId,\n          saveConcert = _this$props.saveConcert,\n          fetchedConcert = _this$props.fetchedConcert;\n    return concert ? React.createElement(\"div\", {\n      className: \"ConcertCard\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22\n      },\n      __self: this\n    }, \"Date: \", concert.datetime), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23\n      },\n      __self: this\n    }, \"Artist: \", concert.lineup[0]), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24\n      },\n      __self: this\n    }, \"Venue: \", concert.venue.name), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25\n      },\n      __self: this\n    }, \"Aggregated Score: \", fetchedConcert.attributes.combined_review_score), React.createElement(Link, {\n      to: \"/concerts/\".concat(concert.id, \"/reviews\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26\n      },\n      __self: this\n    }, \" See all reviews for this concert\"), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26\n      },\n      __self: this\n    }), !!concert.reviews.find(rev => rev.attributes.user.id == userId) ? React.createElement(Link, {\n      to: \"/reviews/\".concat(concert.reviews.find(rev => rev.attributes.user.id == userId)),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27\n      },\n      __self: this\n    }, \"Your Review\") : React.createElement(Link, {\n      to: \"/concerts/\".concat(concert.id, \"/reviews/new\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27\n      },\n      __self: this\n    }, \"Add a review\")) : React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30\n      },\n      __self: this\n    }, \" Maaaaan they ain't no concert here \");\n  }\n\n}\n\nconst mapStateToProps = state => {\n  const userId = state.currentUser ? state.currentUser.id : \"\";\n  return {\n    userId,\n    concerts: state.concerts,\n    reviews: state.reviews,\n    fetchedConcert: state.concert\n  };\n};\n\nexport default withRouter(connect(mapStateToProps, {\n  getConcerts,\n  getConcertReviews,\n  getConcert\n})(ConcertCard));","map":{"version":3,"sources":["/Users/maxbrooks/Development/code/moss/moss-client/src/components/ConcertCard.js"],"names":["React","Link","connect","getConcerts","getConcert","getConcertReviews","withRouter","ConcertCard","Component","componentDidMount","ownProps","props","params","match","id","render","concert","userId","saveConcert","fetchedConcert","datetime","lineup","venue","name","attributes","combined_review_score","reviews","find","rev","user","mapStateToProps","state","currentUser","concerts"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,IAAR,QAAmB,kBAAnB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,WAAT,EAAsBC,UAAtB,QAAwC,wBAAxC;AACA,SAASC,iBAAT,QAAkC,uBAAlC;AACA,SAASC,UAAT,QAA2B,kBAA3B;;AAGA,MAAMC,WAAN,SAA0BP,KAAK,CAACQ,SAAhC,CAA0C;AAExCC,EAAAA,iBAAiB,CAACC,QAAD,EAAU;AACzB,SAAKC,KAAL,CAAWP,UAAX,CAAsBM,QAAQ,CAACE,MAAT,CAAgBC,KAAhB,CAAsBC,EAA5C;AACD;;AAIDC,EAAAA,MAAM,GAAI;AAAA,wBACiD,KAAKJ,KADtD;AAAA,UACAK,OADA,eACAA,OADA;AAAA,UACSC,MADT,eACSA,MADT;AAAA,UACiBC,WADjB,eACiBA,WADjB;AAAA,UAC8BC,cAD9B,eAC8BA,cAD9B;AAER,WACEH,OAAO,GACL;AAAK,MAAA,SAAS,EAAG,aAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAAUA,OAAO,CAACI,QAAlB,CADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAAYJ,OAAO,CAACK,MAAR,CAAe,CAAf,CAAZ,CAFF,EAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAWL,OAAO,CAACM,KAAR,CAAcC,IAAzB,CAHF,EAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BAAsBJ,cAAc,CAACK,UAAf,CAA0BC,qBAAhD,CAJF,EAKE,oBAAC,IAAD;AAAM,MAAA,EAAE,sBAAgBT,OAAO,CAACF,EAAxB,aAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2CALF,EAKwF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MALxF,EAMG,CAAC,CAACE,OAAO,CAACU,OAAR,CAAgBC,IAAhB,CAAqBC,GAAG,IAAIA,GAAG,CAACJ,UAAJ,CAAeK,IAAf,CAAoBf,EAApB,IAA0BG,MAAtD,CAAF,GAAkE,oBAAC,IAAD;AAAM,MAAA,EAAE,qBAAcD,OAAO,CAACU,OAAR,CAAgBC,IAAhB,CAAqBC,GAAG,IAAIA,GAAG,CAACJ,UAAJ,CAAeK,IAAf,CAAoBf,EAApB,IAA0BG,MAAtD,CAAd,CAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAAlE,GAA6K,oBAAC,IAAD;AAAM,MAAA,EAAE,sBAAeD,OAAO,CAACF,EAAvB,iBAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBANhL,CADK,GAUM;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8CAXf;AAcC;;AAxBqC;;AA2B1C,MAAMgB,eAAe,GAAGC,KAAK,IAAI;AAC/B,QAAMd,MAAM,GAAGc,KAAK,CAACC,WAAN,GAAoBD,KAAK,CAACC,WAAN,CAAkBlB,EAAtC,GAA2C,EAA1D;AACA,SAAQ;AACNG,IAAAA,MADM;AAENgB,IAAAA,QAAQ,EAAEF,KAAK,CAACE,QAFV;AAGNP,IAAAA,OAAO,EAAEK,KAAK,CAACL,OAHT;AAINP,IAAAA,cAAc,EAAEY,KAAK,CAACf;AAJhB,GAAR;AAOD,CATD;;AAYA,eAAeV,UAAU,CAACJ,OAAO,CAAC4B,eAAD,EAAkB;AAAC3B,EAAAA,WAAD;AAAcE,EAAAA,iBAAd;AAAiCD,EAAAA;AAAjC,CAAlB,CAAP,CAAuEG,WAAvE,CAAD,CAAzB","sourcesContent":["import React from 'react'\nimport {Link} from 'react-router-dom'\nimport { connect } from 'react-redux'\nimport { getConcerts, getConcert } from '../actions/concerts.js'\nimport { getConcertReviews } from '../actions/reviews.js'\nimport { withRouter } from 'react-router-dom'\n\n\nclass ConcertCard extends React.Component {\n\n  componentDidMount(ownProps){\n    this.props.getConcert(ownProps.params.match.id)\n  }\n\n\n\n  render () {\n    const { concert, userId, saveConcert, fetchedConcert } = this.props\n    return (\n      concert ?\n        <div className = \"ConcertCard\">\n          <p>Date: {concert.datetime}</p>\n          <p>Artist: {concert.lineup[0]}</p>\n          <p>Venue: {concert.venue.name}</p>\n          <p>Aggregated Score: {fetchedConcert.attributes.combined_review_score}</p>\n          <Link to ={`/concerts/${concert.id}/reviews`}> See all reviews for this concert</Link><br/>\n          {!!concert.reviews.find(rev => rev.attributes.user.id == userId) ? <Link to={`/reviews/${concert.reviews.find(rev => rev.attributes.user.id == userId)}`}>Your Review</Link>: <Link to={`/concerts/${concert.id}/reviews/new`}>Add a review</Link> }\n\n\n          </div> : <div> Maaaaan they ain't no concert here </div>\n      )\n\n    }\n  }\n\nconst mapStateToProps = state => {\n  const userId = state.currentUser ? state.currentUser.id : \"\"\n  return ({\n    userId,\n    concerts: state.concerts,\n    reviews: state.reviews,\n    fetchedConcert: state.concert\n\n  })\n}\n\n\nexport default withRouter(connect(mapStateToProps, {getConcerts, getConcertReviews, getConcert})(ConcertCard))\n"]},"metadata":{},"sourceType":"module"}