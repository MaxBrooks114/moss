{"ast":null,"code":"var _jsxFileName = \"/Users/maxbrooks/Development/code/moss/moss-client/src/components/ConcertCard.js\";\nimport React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { getConcerts, getConcert } from '../actions/concerts.js';\nimport { getConcertReviews } from '../actions/reviews.js';\nimport { withRouter } from 'react-router-dom';\n\nconst ConcertCard = ({\n  concert,\n  currentUserId\n}) => {\n  return concert && concert.attributes ? React.createElement(\"div\", {\n    className: \"ConcertCard\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14\n    },\n    __self: this\n  }, \"Date: \", concert.attributes.date), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15\n    },\n    __self: this\n  }, \"Artist: \", concert.attributes.artist), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16\n    },\n    __self: this\n  }, \"Venue: \", concert.attributes.venue), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17\n    },\n    __self: this\n  }, \"Aggregated Score: \", concert.attributes.combined_review_score), React.createElement(Link, {\n    to: \"/concerts/\".concat(concert.id, \"/reviews\"),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  }, \" See all reviews for this concert\"), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  }), !!concert.attributes.reviews.find(review => review.user_id == currentUserId) ? React.createElement(Link, {\n    to: \"/reviews/\".concat(concert.attributes.reviews.find(review => review.user_id == currentUserId).id),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }, \"Your Review\") : React.createElement(Link, {\n    to: \"/concerts/\".concat(concert.id, \"/reviews/new\"),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }, \" Add a Review \")) : React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }, \" No concert \");\n};\n\nconst mapStateToProps = (state, ownProps) => {\n  const currentUserId = state.currentUser ? state.currentUser.id : \"\";\n  const concertId = ownProps.match.params.id;\n  return {\n    currentUserId,\n    concertId,\n    concerts: state.concerts,\n    reviews: state.reviews,\n    concert: state.concert\n  };\n};\n\nexport default withRouter(connect(mapStateToProps, {\n  getConcerts,\n  getConcertReviews,\n  getConcert\n})(ConcertCard));","map":{"version":3,"sources":["/Users/maxbrooks/Development/code/moss/moss-client/src/components/ConcertCard.js"],"names":["React","useState","useEffect","Link","connect","getConcerts","getConcert","getConcertReviews","withRouter","ConcertCard","concert","currentUserId","attributes","date","artist","venue","combined_review_score","id","reviews","find","review","user_id","mapStateToProps","state","ownProps","currentUser","concertId","match","params","concerts"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAA0C,OAA1C;AACA,SAAQC,IAAR,QAAmB,kBAAnB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,WAAT,EAAsBC,UAAtB,QAAwC,wBAAxC;AACA,SAASC,iBAAT,QAAkC,uBAAlC;AACA,SAASC,UAAT,QAA2B,kBAA3B;;AAGA,MAAMC,WAAW,GAAG,CAAC;AAACC,EAAAA,OAAD;AAAUC,EAAAA;AAAV,CAAD,KAA8B;AAE9C,SACED,OAAO,IAAIA,OAAO,CAACE,UAAnB,GACE;AAAK,IAAA,SAAS,EAAG,aAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAAUF,OAAO,CAACE,UAAR,CAAmBC,IAA7B,CADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAAYH,OAAO,CAACE,UAAR,CAAmBE,MAA/B,CAFF,EAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAAWJ,OAAO,CAACE,UAAR,CAAmBG,KAA9B,CAHF,EAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BAAsBL,OAAO,CAACE,UAAR,CAAmBI,qBAAzC,CAJF,EAKE,oBAAC,IAAD;AAAM,IAAA,EAAE,sBAAgBN,OAAO,CAACO,EAAxB,aAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yCALF,EAKwF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALxF,EAMG,CAAC,CAACP,OAAO,CAACE,UAAR,CAAmBM,OAAnB,CAA2BC,IAA3B,CAAgCC,MAAM,IAAIA,MAAM,CAACC,OAAP,IAAkBV,aAA5D,CAAF,GAA+E,oBAAC,IAAD;AAAM,IAAA,EAAE,qBAAeD,OAAO,CAACE,UAAR,CAAmBM,OAAnB,CAA2BC,IAA3B,CAAgCC,MAAM,IAAIA,MAAM,CAACC,OAAP,IAAkBV,aAA5D,EAA2EM,EAA1F,CAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAA/E,GAA2M,oBAAC,IAAD;AAAM,IAAA,EAAE,sBAAgBP,OAAO,CAACO,EAAxB,iBAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAN9M,CADF,GAQa;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBATf;AAYC,CAdL;;AAgBA,MAAMK,eAAe,GAAG,CAACC,KAAD,EAAQC,QAAR,KAAqB;AAC3C,QAAMb,aAAa,GAAGY,KAAK,CAACE,WAAN,GAAoBF,KAAK,CAACE,WAAN,CAAkBR,EAAtC,GAA2C,EAAjE;AACA,QAAMS,SAAS,GAAGF,QAAQ,CAACG,KAAT,CAAeC,MAAf,CAAsBX,EAAxC;AACA,SAAQ;AACNN,IAAAA,aADM;AAENe,IAAAA,SAFM;AAGNG,IAAAA,QAAQ,EAAEN,KAAK,CAACM,QAHV;AAINX,IAAAA,OAAO,EAAEK,KAAK,CAACL,OAJT;AAKNR,IAAAA,OAAO,EAAEa,KAAK,CAACb;AALT,GAAR;AAWD,CAdD;;AAiBA,eAAeF,UAAU,CAACJ,OAAO,CAACkB,eAAD,EAAkB;AAACjB,EAAAA,WAAD;AAAcE,EAAAA,iBAAd;AAAiCD,EAAAA;AAAjC,CAAlB,CAAP,CAAuEG,WAAvE,CAAD,CAAzB","sourcesContent":["import React, {useState, useEffect } from 'react'\nimport {Link} from 'react-router-dom'\nimport { connect } from 'react-redux'\nimport { getConcerts, getConcert } from '../actions/concerts.js'\nimport { getConcertReviews } from '../actions/reviews.js'\nimport { withRouter } from 'react-router-dom'\n\n\nconst ConcertCard = ({concert, currentUserId}) => {\n\n    return (\n      concert && concert.attributes ?\n        <div className = \"ConcertCard\">\n          <p>Date: {concert.attributes.date}</p>\n          <p>Artist: {concert.attributes.artist}</p>\n          <p>Venue: {concert.attributes.venue}</p>\n          <p>Aggregated Score: {concert.attributes.combined_review_score}</p>\n          <Link to ={`/concerts/${concert.id}/reviews`}> See all reviews for this concert</Link><br/>\n          {!!concert.attributes.reviews.find(review => review.user_id == currentUserId) ? <Link to ={`/reviews/${concert.attributes.reviews.find(review => review.user_id == currentUserId).id}`}>Your Review</Link> :<Link to ={`/concerts/${concert.id}/reviews/new`}> Add a Review </Link> }\n          </div> : <div> No concert </div>\n      )\n\n    }\n\nconst mapStateToProps = (state, ownProps) => {\n  const currentUserId = state.currentUser ? state.currentUser.id : \"\"\n  const concertId = ownProps.match.params.id\n  return ({\n    currentUserId,\n    concertId,\n    concerts: state.concerts,\n    reviews: state.reviews,\n    concert: state.concert,\n\n\n\n\n  })\n}\n\n\nexport default withRouter(connect(mapStateToProps, {getConcerts, getConcertReviews, getConcert})(ConcertCard))\n"]},"metadata":{},"sourceType":"module"}