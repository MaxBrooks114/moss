{"ast":null,"code":"var _jsxFileName = \"/Users/maxbrooks/Development/code/moss/moss-client/src/components/ReviewCard.js\";\nimport React from 'react';\nimport { Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport { getUserReviews } from '../actions/reviews';\n\nconst ReviewCard = ({\n  review,\n  currentUserId,\n  ownProps,\n  getUserReviews\n}) => {\n  return review ? React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14\n    },\n    __self: this\n  }, React.createElement(\"h3\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15\n    },\n    __self: this\n  }, review.attributes.user.username, \"'s Review for \", React.createElement(Link, {\n    to: \"/concerts/\".concat(review.attributes.concert.id),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15\n    },\n    __self: this\n  }, review.attributes.concert.name)), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16\n    },\n    __self: this\n  }, \"Performance: \", review.attributes.set_score), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17\n    },\n    __self: this\n  }, \"Venue: \", review.attributes.venue_score), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  }, \"Sound: \", review.attributes.sound_score), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }, \"Set: \", review.attributes.set_score), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }, \"Price:\", review.attributes.price), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }, review.attributes.write_up), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }, \"Final Score: \", review.attributes.final_score), review.attributes.user.id == currentUserId ? React.createElement(Link, {\n    to: \"/reviews/\".concat(review.id, \"/edit\"),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }, \"Edit your review\") : \"\", React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }), React.createElement(Link, {\n    to: \"/users/\".concat(review.attributes.user.id, \"/reviews\"),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }, \" See all of \", review.attributes.user.username, \"'s reviews\")) : React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }, \" Maaaaan they ain't no review here \");\n};\n\nconst mapStateToProps = (state, ownProps) => {\n  const currentUserId = state.currentUser ? state.currentUser.id : \"\";\n  return {\n    currentUserId\n  };\n};\n\nexport default withRouter(connect(mapStateToProps, {\n  getUserReviews\n})(ReviewCard));","map":{"version":3,"sources":["/Users/maxbrooks/Development/code/moss/moss-client/src/components/ReviewCard.js"],"names":["React","Link","connect","withRouter","getUserReviews","ReviewCard","review","currentUserId","ownProps","attributes","user","username","concert","id","name","set_score","venue_score","sound_score","price","write_up","final_score","mapStateToProps","state","currentUser"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,IAAR,QAAmB,kBAAnB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,UAAT,QAA0B,kBAA1B;AACA,SAASC,cAAT,QAA+B,oBAA/B;;AAGA,MAAMC,UAAU,GAAG,CAAC;AAAEC,EAAAA,MAAF;AAAUC,EAAAA,aAAV;AAAyBC,EAAAA,QAAzB;AAAmCJ,EAAAA;AAAnC,CAAD,KAAyD;AAI1E,SACEE,MAAM,GACJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKA,MAAM,CAACG,UAAP,CAAkBC,IAAlB,CAAuBC,QAA5B,oBAAmD,oBAAC,IAAD;AAAM,IAAA,EAAE,sBAAeL,MAAM,CAACG,UAAP,CAAkBG,OAAlB,CAA0BC,EAAzC,CAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAwDP,MAAM,CAACG,UAAP,CAAkBG,OAAlB,CAA0BE,IAAlF,CAAnD,CADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAAiBR,MAAM,CAACG,UAAP,CAAkBM,SAAnC,CAFF,EAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAAWT,MAAM,CAACG,UAAP,CAAkBO,WAA7B,CAHF,EAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAAWV,MAAM,CAACG,UAAP,CAAkBQ,WAA7B,CAJF,EAKE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAASX,MAAM,CAACG,UAAP,CAAkBM,SAA3B,CALF,EAME;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAAUT,MAAM,CAACG,UAAP,CAAkBS,KAA5B,CANF,EAOE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAIZ,MAAM,CAACG,UAAP,CAAkBU,QAAtB,CAPF,EAQE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAAiBb,MAAM,CAACG,UAAP,CAAkBW,WAAnC,CARF,EASGd,MAAM,CAACG,UAAP,CAAkBC,IAAlB,CAAuBG,EAAvB,IAA6BN,aAA7B,GAA6C,oBAAC,IAAD;AAAM,IAAA,EAAE,qBAAcD,MAAM,CAACO,EAArB,UAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAA7C,GAA+G,EATlH,EASqH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IATrH,EAUE,oBAAC,IAAD;AAAM,IAAA,EAAE,mBAAYP,MAAM,CAACG,UAAP,CAAkBC,IAAlB,CAAuBG,EAAnC,aAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAAsEP,MAAM,CAACG,UAAP,CAAkBC,IAAlB,CAAuBC,QAA7F,eAVF,CADI,GAcK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2CAfb;AAkBD,CAtBD;;AAwBA,MAAMU,eAAe,GAAG,CAACC,KAAD,EAAQd,QAAR,KAAqB;AAC3C,QAAMD,aAAa,GAAGe,KAAK,CAACC,WAAN,GAAoBD,KAAK,CAACC,WAAN,CAAkBV,EAAtC,GAA2C,EAAjE;AACA,SAAQ;AACNN,IAAAA;AADM,GAAR;AAID,CAND;;AAQA,eAAeJ,UAAU,CAACD,OAAO,CAACmB,eAAD,EAAkB;AAACjB,EAAAA;AAAD,CAAlB,CAAP,CAA2CC,UAA3C,CAAD,CAAzB","sourcesContent":["import React from 'react'\nimport {Link} from 'react-router-dom'\nimport { connect } from 'react-redux'\nimport { withRouter} from 'react-router-dom'\nimport { getUserReviews } from '../actions/reviews'\n\n\nconst ReviewCard = ({ review, currentUserId, ownProps, getUserReviews }) => {\n\n\n\n  return (\n    review ?\n      <div>\n        <h3>{review.attributes.user.username}'s Review for <Link to={`/concerts/${review.attributes.concert.id}`}>{review.attributes.concert.name}</Link></h3>\n        <p>Performance: {review.attributes.set_score}</p>\n        <p>Venue: {review.attributes.venue_score}</p>\n        <p>Sound: {review.attributes.sound_score}</p>\n        <p>Set: {review.attributes.set_score}</p>\n        <p>Price:{review.attributes.price}</p>\n        <p>{review.attributes.write_up}</p>\n        <p>Final Score: {review.attributes.final_score}</p>\n        {review.attributes.user.id == currentUserId ? <Link to={`/reviews/${review.id}/edit`}>Edit your review</Link> : \"\"}<br/>\n        <Link to={`/users/${review.attributes.user.id}/reviews`}> See all of {review.attributes.user.username}'s reviews</Link>\n\n\n      </div> : <div> Maaaaan they ain't no review here </div>\n  )\n\n}\n\nconst mapStateToProps = (state, ownProps) => {\n  const currentUserId = state.currentUser ? state.currentUser.id : \"\"\n  return ({\n    currentUserId,\n\n  })\n}\n\nexport default withRouter(connect(mapStateToProps, {getUserReviews})(ReviewCard))\n"]},"metadata":{},"sourceType":"module"}