{"ast":null,"code":"var _jsxFileName = \"/Users/maxbrooks/Development/code/moss/moss-client/src/containers/Concerts/Concerts.js\";\nimport React from 'react';\nimport ConcertSearchFormWrapper from './ConcertSearchFormWrapper';\nimport ConcertsList from '../.././components/concerts/ConcertsList';\nimport { connect } from 'react-redux';\nimport Container from 'react-bootstrap/Container';\nimport Card from 'react-bootstrap/Card';\nimport Button from 'react-bootstrap/Button';\nimport Spinner from 'react-bootstrap/Spinner';\n\nconst Concerts = ({\n  concerts,\n  isLoading,\n  artist\n}) => {\n  return React.createElement(Container, {\n    className: \"concerts-container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13\n    },\n    __self: this\n  }, React.createElement(ConcertSearchFormWrapper, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14\n    },\n    __self: this\n  }), isLoading ? React.createElement(Button, {\n    className: \"loading-bar\",\n    variant: \"secondary\",\n    disabled: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16\n    },\n    __self: this\n  }, React.createElement(Spinner, {\n    as: \"span\",\n    animation: \"grow\",\n    size: \"sm\",\n    role: \"status\",\n    \"aria-hidden\": \"true\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17\n    },\n    __self: this\n  }), \"Loading...\") : concerts.length > 0 && concerts !== '\\n{warn=Not found}\\n' ? React.createElement(ConcertsList, {\n    concerts: concerts,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }) : null);\n};\n\nconst mapStateToProps = state => {\n  return {\n    concerts: state.concerts.concerts,\n    isLoading: state.concerts.isLoading,\n    artist: state.concertSearchForm.artist\n  };\n};\n\nexport default connect(mapStateToProps)(Concerts);","map":{"version":3,"sources":["/Users/maxbrooks/Development/code/moss/moss-client/src/containers/Concerts/Concerts.js"],"names":["React","ConcertSearchFormWrapper","ConcertsList","connect","Container","Card","Button","Spinner","Concerts","concerts","isLoading","artist","length","mapStateToProps","state","concertSearchForm"],"mappings":";AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,wBAAP,MAAqC,4BAArC;AACA,OAAOC,YAAP,MAAyB,0CAAzB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,SAAP,MAAsB,2BAAtB;AACA,OAAOC,IAAP,MAAiB,sBAAjB;AACA,OAAOC,MAAP,MAAmB,wBAAnB;AACA,OAAOC,OAAP,MAAoB,yBAApB;;AAEA,MAAMC,QAAQ,GAAG,CAAC;AAACC,EAAAA,QAAD;AAAWC,EAAAA,SAAX;AAAsBC,EAAAA;AAAtB,CAAD,KAAmC;AAChD,SACE,oBAAC,SAAD;AAAW,IAAA,SAAS,EAAC,oBAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,wBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEGD,SAAS,GACR,oBAAC,MAAD;AAAQ,IAAA,SAAS,EAAC,aAAlB;AAAgC,IAAA,OAAO,EAAC,WAAxC;AAAoD,IAAA,QAAQ,MAA5D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,OAAD;AACE,IAAA,EAAE,EAAC,MADL;AAEE,IAAA,SAAS,EAAC,MAFZ;AAGE,IAAA,IAAI,EAAC,IAHP;AAIE,IAAA,IAAI,EAAC,QAJP;AAKE,mBAAY,MALd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eADQ,GAYLD,QAAQ,CAACG,MAAT,GAAkB,CAAlB,IAAuBH,QAAQ,KAAK,sBAArC,GAA+D,oBAAC,YAAD;AAAc,IAAA,QAAQ,EAAEA,QAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAA/D,GAAqG,IAd3G,CADF;AAmBH,CApBD;;AAwBA,MAAMI,eAAe,GAAIC,KAAD,IAAW;AAEjC,SAAO;AAEHL,IAAAA,QAAQ,EAAEK,KAAK,CAACL,QAAN,CAAeA,QAFtB;AAGHC,IAAAA,SAAS,EAAEI,KAAK,CAACL,QAAN,CAAeC,SAHvB;AAIHC,IAAAA,MAAM,EAAEG,KAAK,CAACC,iBAAN,CAAwBJ;AAJ7B,GAAP;AAOD,CATD;;AAWA,eAAeR,OAAO,CAACU,eAAD,CAAP,CAAyBL,QAAzB,CAAf","sourcesContent":["\nimport React from 'react';\nimport ConcertSearchFormWrapper from './ConcertSearchFormWrapper';\nimport ConcertsList from '../.././components/concerts/ConcertsList';\nimport { connect } from 'react-redux';\nimport Container from 'react-bootstrap/Container'\nimport Card from 'react-bootstrap/Card'\nimport Button from 'react-bootstrap/Button'\nimport Spinner from 'react-bootstrap/Spinner'\n\nconst Concerts = ({concerts, isLoading, artist}) => {\n    return (\n      <Container className=\"concerts-container\">\n        <ConcertSearchFormWrapper />\n        {isLoading  ?\n          <Button className=\"loading-bar\" variant=\"secondary\" disabled>\n            <Spinner\n              as=\"span\"\n              animation=\"grow\"\n              size=\"sm\"\n              role=\"status\"\n              aria-hidden=\"true\"\n                  />\n              Loading...\n            </Button>\n           :\n           ((concerts.length > 0 && concerts !== '\\n{warn=Not found}\\n') ? <ConcertsList concerts={concerts}/> : null)}\n\n      </Container>\n    )\n};\n\n\n\nconst mapStateToProps = (state) => {\n\n  return {\n\n      concerts: state.concerts.concerts,\n      isLoading: state.concerts.isLoading,\n      artist: state.concertSearchForm.artist\n\n  }\n}\n\nexport default connect(mapStateToProps)(Concerts);\n"]},"metadata":{},"sourceType":"module"}