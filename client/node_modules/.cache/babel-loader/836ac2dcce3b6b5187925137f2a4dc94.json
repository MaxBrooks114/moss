{"ast":null,"code":"import _slicedToArray from \"/Users/maxbrooks/Development/code/moss/moss-client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/maxbrooks/Development/code/moss/moss-client/src/components/ConcertCard.js\";\nimport React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { getConcerts, getConcert } from '../actions/concerts.js';\nimport { getConcertReviews } from '../actions/reviews.js';\nimport { withRouter } from 'react-router-dom';\n\nconst ConcertCard = () => {\n  const _useState = useState({\n    concert: []\n  }),\n        _useState2 = _slicedToArray(_useState, 2),\n        concert = _useState2[0],\n        setConcert = _useState2[1];\n\n  useEffect(() => {\n    getConcert(this.props.concertId);\n  });\n  return concert ? React.createElement(\"div\", {\n    className: \"ConcertCard\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }, \"Date: \", concert.attributes.date), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }, \"Artist: \"), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }, \"Venue: \"), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }, \"Aggregated Score: \"), React.createElement(Link, {\n    to: \"/concerts/\".concat(concert.id, \"/reviews\"),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }, \" See all reviews for this concert\"), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }), !!concert.reviews.find(rev => rev.attributes.user.id == this.props.userId) ? React.createElement(Link, {\n    to: \"/reviews/\".concat(concert.reviews.find(rev => rev.attributes.user.id == this.propsuserId)),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }, \"Your Review\") : React.createElement(Link, {\n    to: \"/concerts/\".concat(concert.id, \"/reviews/new\"),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }, \"Add a review\")) : React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }, \" Maaaaan they ain't no concert here \");\n};\n\nconst mapStateToProps = (state, ownProps) => {\n  const userId = state.currentUser ? state.currentUser.id : \"\";\n  const concertId = ownProps.match.params.id;\n  return {\n    userId,\n    concertId,\n    concerts: state.concerts,\n    reviews: state.reviews,\n    concert: state.concert\n  };\n};\n\nexport default withRouter(connect(mapStateToProps, {\n  getConcerts,\n  getConcertReviews,\n  getConcert\n})(ConcertCard));","map":{"version":3,"sources":["/Users/maxbrooks/Development/code/moss/moss-client/src/components/ConcertCard.js"],"names":["React","useState","useEffect","Link","connect","getConcerts","getConcert","getConcertReviews","withRouter","ConcertCard","concert","setConcert","props","concertId","attributes","date","id","reviews","find","rev","user","userId","propsuserId","mapStateToProps","state","ownProps","currentUser","match","params","concerts"],"mappings":";;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC;AACA,SAAQC,IAAR,QAAmB,kBAAnB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,WAAT,EAAsBC,UAAtB,QAAwC,wBAAxC;AACA,SAASC,iBAAT,QAAkC,uBAAlC;AACA,SAASC,UAAT,QAA2B,kBAA3B;;AAGA,MAAMC,WAAW,GAAG,MAAM;AAAA,oBACGR,QAAQ,CAAC;AAACS,IAAAA,OAAO,EAAC;AAAT,GAAD,CADX;AAAA;AAAA,QACjBA,OADiB;AAAA,QACTC,UADS;;AAGtBT,EAAAA,SAAS,CAAC,MAAM;AACdI,IAAAA,UAAU,CAAC,KAAKM,KAAL,CAAWC,SAAZ,CAAV;AACD,GAFQ,CAAT;AAIA,SACEH,OAAO,GACL;AAAK,IAAA,SAAS,EAAG,aAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAAUA,OAAO,CAACI,UAAR,CAAmBC,IAA7B,CADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFF,EAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAHF,EAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BAJF,EAKE,oBAAC,IAAD;AAAM,IAAA,EAAE,sBAAgBL,OAAO,CAACM,EAAxB,aAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yCALF,EAKwF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALxF,EAMG,CAAC,CAACN,OAAO,CAACO,OAAR,CAAgBC,IAAhB,CAAqBC,GAAG,IAAIA,GAAG,CAACL,UAAJ,CAAeM,IAAf,CAAoBJ,EAApB,IAA0B,KAAKJ,KAAL,CAAWS,MAAjE,CAAF,GAA6E,oBAAC,IAAD;AAAM,IAAA,EAAE,qBAAcX,OAAO,CAACO,OAAR,CAAgBC,IAAhB,CAAqBC,GAAG,IAAIA,GAAG,CAACL,UAAJ,CAAeM,IAAf,CAAoBJ,EAApB,IAA0B,KAAKM,WAA3D,CAAd,CAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAA7E,GAAkM,oBAAC,IAAD;AAAM,IAAA,EAAE,sBAAeZ,OAAO,CAACM,EAAvB,iBAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBANrM,CADK,GAQI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4CATb;AAYC,CAnBL;;AAsBA,MAAMO,eAAe,GAAG,CAACC,KAAD,EAAQC,QAAR,KAAqB;AAC3C,QAAMJ,MAAM,GAAGG,KAAK,CAACE,WAAN,GAAoBF,KAAK,CAACE,WAAN,CAAkBV,EAAtC,GAA2C,EAA1D;AACA,QAAMH,SAAS,GAAGY,QAAQ,CAACE,KAAT,CAAeC,MAAf,CAAsBZ,EAAxC;AACA,SAAQ;AACNK,IAAAA,MADM;AAENR,IAAAA,SAFM;AAGNgB,IAAAA,QAAQ,EAAEL,KAAK,CAACK,QAHV;AAINZ,IAAAA,OAAO,EAAEO,KAAK,CAACP,OAJT;AAKNP,IAAAA,OAAO,EAAEc,KAAK,CAACd;AALT,GAAR;AAUD,CAbD;;AAgBA,eAAeF,UAAU,CAACJ,OAAO,CAACmB,eAAD,EAAkB;AAAClB,EAAAA,WAAD;AAAcE,EAAAA,iBAAd;AAAiCD,EAAAA;AAAjC,CAAlB,CAAP,CAAuEG,WAAvE,CAAD,CAAzB","sourcesContent":["import React, {useState, useEffect} from 'react'\nimport {Link} from 'react-router-dom'\nimport { connect } from 'react-redux'\nimport { getConcerts, getConcert } from '../actions/concerts.js'\nimport { getConcertReviews } from '../actions/reviews.js'\nimport { withRouter } from 'react-router-dom'\n\n\nconst ConcertCard = () => {\n  const [concert,setConcert]=useState({concert:[]})\n\n    useEffect(() => {\n      getConcert(this.props.concertId);\n    });\n\n    return (\n      concert ?\n        <div className = \"ConcertCard\">\n          <p>Date: {concert.attributes.date}</p>\n          <p>Artist: {}</p>\n          <p>Venue: {}</p>\n          <p>Aggregated Score: {}</p>\n          <Link to ={`/concerts/${concert.id}/reviews`}> See all reviews for this concert</Link><br/>\n          {!!concert.reviews.find(rev => rev.attributes.user.id == this.props.userId) ? <Link to={`/reviews/${concert.reviews.find(rev => rev.attributes.user.id == this.propsuserId)}`}>Your Review</Link>: <Link to={`/concerts/${concert.id}/reviews/new`}>Add a review</Link>}\n        </div> : <div> Maaaaan they ain't no concert here </div>\n      )\n\n    }\n\n\nconst mapStateToProps = (state, ownProps) => {\n  const userId = state.currentUser ? state.currentUser.id : \"\"\n  const concertId = ownProps.match.params.id\n  return ({\n    userId,\n    concertId,\n    concerts: state.concerts,\n    reviews: state.reviews,\n    concert: state.concert\n\n\n\n  })\n}\n\n\nexport default withRouter(connect(mapStateToProps, {getConcerts, getConcertReviews, getConcert})(ConcertCard))\n"]},"metadata":{},"sourceType":"module"}