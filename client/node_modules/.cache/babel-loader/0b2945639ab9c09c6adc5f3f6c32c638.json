{"ast":null,"code":"var _jsxFileName = \"/Users/maxbrooks/Development/code/moss/moss-client/src/components/ConcertCard.js\";\nimport React from 'react';\nimport { Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { getConcerts, getConcert } from '../actions/concerts.js';\nimport { getConcertReviews } from '../actions/reviews.js';\nimport { withRouter } from 'react-router-dom';\n\nclass ConcertCard extends React.Component {\n  componentWillMount(props) {\n    this.props.getConcert(this.props.concertId);\n  } // <Link to ={`/concerts/${concert.id}/reviews`}> See all reviews for this concert</Link><br/>\n  // {!!concert.reviews.find(rev => rev.attributes.user.id == userId) ? <Link to={`/reviews/${concert.reviews.find(rev => rev.attributes.user.id == userId)}`}>Your Review</Link>: <Link to={`/concerts/${concert.id}/reviews/new`}>Add a review</Link> }\n\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"ConcertCard\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26\n      },\n      __self: this\n    }, \"Date: \", this.props.concert.attributes.name), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27\n      },\n      __self: this\n    }, \"Artist: \"), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28\n      },\n      __self: this\n    }, \"Venue: \"), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29\n      },\n      __self: this\n    }, \"Aggregated Score: \"));\n  }\n\n}\n\nconst mapStateToProps = (state, ownProps) => {\n  const userId = state.currentUser ? state.currentUser.id : \"\";\n  const concertId = ownProps.match.params.id;\n  return {\n    userId,\n    concertId,\n    reviews: state.reviews,\n    concert: state.concert\n  };\n};\n\nexport default withRouter(connect(mapStateToProps, {\n  getConcerts,\n  getConcertReviews,\n  getConcert\n})(ConcertCard));","map":{"version":3,"sources":["/Users/maxbrooks/Development/code/moss/moss-client/src/components/ConcertCard.js"],"names":["React","Link","connect","getConcerts","getConcert","getConcertReviews","withRouter","ConcertCard","Component","componentWillMount","props","concertId","render","concert","attributes","name","mapStateToProps","state","ownProps","userId","currentUser","id","match","params","reviews"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,IAAR,QAAmB,kBAAnB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,WAAT,EAAsBC,UAAtB,QAAwC,wBAAxC;AACA,SAASC,iBAAT,QAAkC,uBAAlC;AACA,SAASC,UAAT,QAA2B,kBAA3B;;AAGA,MAAMC,WAAN,SAA0BP,KAAK,CAACQ,SAAhC,CAA0C;AAExCC,EAAAA,kBAAkB,CAACC,KAAD,EAAO;AACvB,SAAKA,KAAL,CAAWN,UAAX,CAAsB,KAAKM,KAAL,CAAWC,SAAjC;AACD,GAJuC,CAOxC;AACA;;;AAIAC,EAAAA,MAAM,GAAI;AAER,WAEI;AAAK,MAAA,SAAS,EAAG,aAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAAU,KAAKF,KAAL,CAAWG,OAAX,CAAmBC,UAAnB,CAA8BC,IAAxC,CADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFF,EAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAHF,EAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BAJF,CAFJ;AAaC;;AA3BqC;;AA8B1C,MAAMC,eAAe,GAAG,CAACC,KAAD,EAAQC,QAAR,KAAqB;AAC3C,QAAMC,MAAM,GAAGF,KAAK,CAACG,WAAN,GAAoBH,KAAK,CAACG,WAAN,CAAkBC,EAAtC,GAA2C,EAA1D;AACA,QAAMV,SAAS,GAAGO,QAAQ,CAACI,KAAT,CAAeC,MAAf,CAAsBF,EAAxC;AACA,SAAQ;AACNF,IAAAA,MADM;AAENR,IAAAA,SAFM;AAGNa,IAAAA,OAAO,EAAEP,KAAK,CAACO,OAHT;AAINX,IAAAA,OAAO,EAAEI,KAAK,CAACJ;AAJT,GAAR;AASD,CAZD;;AAeA,eAAeP,UAAU,CAACJ,OAAO,CAACc,eAAD,EAAkB;AAACb,EAAAA,WAAD;AAAcE,EAAAA,iBAAd;AAAiCD,EAAAA;AAAjC,CAAlB,CAAP,CAAuEG,WAAvE,CAAD,CAAzB","sourcesContent":["import React from 'react'\nimport {Link} from 'react-router-dom'\nimport { connect } from 'react-redux'\nimport { getConcerts, getConcert } from '../actions/concerts.js'\nimport { getConcertReviews } from '../actions/reviews.js'\nimport { withRouter } from 'react-router-dom'\n\n\nclass ConcertCard extends React.Component {\n\n  componentWillMount(props){\n    this.props.getConcert(this.props.concertId)\n  }\n\n\n  // <Link to ={`/concerts/${concert.id}/reviews`}> See all reviews for this concert</Link><br/>\n  // {!!concert.reviews.find(rev => rev.attributes.user.id == userId) ? <Link to={`/reviews/${concert.reviews.find(rev => rev.attributes.user.id == userId)}`}>Your Review</Link>: <Link to={`/concerts/${concert.id}/reviews/new`}>Add a review</Link> }\n\n\n\n  render () {\n\n    return (\n\n        <div className = \"ConcertCard\">\n          <p>Date: {this.props.concert.attributes.name}</p>\n          <p>Artist: {}</p>\n          <p>Venue: {}</p>\n          <p>Aggregated Score: {}</p>\n\n\n\n        </div>\n      )\n\n    }\n  }\n\nconst mapStateToProps = (state, ownProps) => {\n  const userId = state.currentUser ? state.currentUser.id : \"\"\n  const concertId = ownProps.match.params.id\n  return ({\n    userId,\n    concertId,\n    reviews: state.reviews,\n    concert: state.concert\n\n\n\n  })\n}\n\n\nexport default withRouter(connect(mapStateToProps, {getConcerts, getConcertReviews, getConcert})(ConcertCard))\n"]},"metadata":{},"sourceType":"module"}