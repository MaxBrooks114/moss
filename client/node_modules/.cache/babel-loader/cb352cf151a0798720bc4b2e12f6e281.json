{"ast":null,"code":"var _jsxFileName = \"/Users/maxbrooks/Development/Projects/moss/moss-client/src/containers/Reviews/EditReviewFormWrapper.js\";\nimport React from 'react';\nimport ReviewForm from '../.././components/reviews/ReviewForm';\nimport { updateReview, deleteReview } from '../.././actions/reviews/reviews';\nimport { setFormDataForEdit, resetReviewForm } from '../.././actions/reviews/reviewForm';\nimport { connect } from 'react-redux';\nimport Card from 'react-bootstrap/Card';\nimport Button from 'react-bootstrap/Button';\n\nclass EditReviewFormWrapper extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    this.handleSubmit = formData => {\n      const {\n        updateReview,\n        review,\n        history\n      } = this.props;\n      updateReview({ ...formData,\n        reviewId: review.id\n      }, history);\n    };\n  }\n\n  componentDidMount() {\n    this.props.review && this.props.setFormDataForEdit(this.props.review);\n  }\n\n  componentDidUpdate(prevProps) {\n    this.props.review && !prevProps.review && this.props.setFormDataForEdit(this.props.review);\n  }\n\n  componentWillUnmount() {\n    this.props.resetReviewForm();\n  }\n\n  render() {\n    const {\n      history,\n      deleteReview,\n      review,\n      currentUserId\n    } = this.props;\n    const reviewId = review ? review.id : null;\n    const concertId = review ? review.attributes.concert.id : null;\n    const userId = review ? review.attributes.user.id : null;\n    return currentUserId == userId ? /*#__PURE__*/React.createElement(Card, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(ReviewForm, {\n      editMode: true,\n      handleSubmit: this.handleSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(Button, {\n      onClick: () => deleteReview(reviewId, history, concertId, userId),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 15\n      }\n    }, \"Delete this review\")) : /*#__PURE__*/React.createElement(Card, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 19\n      }\n    }, \" \", /*#__PURE__*/React.createElement(Card.Title, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 26\n      }\n    }, \"This is not your review to edit!\"));\n  }\n\n}\n\n;\n\nconst mapStateToProps = (state, ownProps) => {\n  const currentUserId = state.currentUser ? state.currentUser.id : \"\";\n  return {\n    currentUserId\n  };\n};\n\nexport default connect(mapStateToProps, {\n  updateReview,\n  setFormDataForEdit,\n  resetReviewForm,\n  deleteReview\n})(EditReviewFormWrapper);","map":{"version":3,"sources":["/Users/maxbrooks/Development/Projects/moss/moss-client/src/containers/Reviews/EditReviewFormWrapper.js"],"names":["React","ReviewForm","updateReview","deleteReview","setFormDataForEdit","resetReviewForm","connect","Card","Button","EditReviewFormWrapper","Component","handleSubmit","formData","review","history","props","reviewId","id","componentDidMount","componentDidUpdate","prevProps","componentWillUnmount","render","currentUserId","concertId","attributes","concert","userId","user","mapStateToProps","state","ownProps","currentUser"],"mappings":"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","sourcesContent":["import React from 'react';\nimport ReviewForm from '../.././components/reviews/ReviewForm'\nimport { updateReview, deleteReview } from '../.././actions/reviews/reviews'\nimport { setFormDataForEdit, resetReviewForm } from '../.././actions/reviews/reviewForm'\nimport { connect } from 'react-redux'\nimport Card from 'react-bootstrap/Card'\nimport Button from 'react-bootstrap/Button'\n\nclass EditReviewFormWrapper extends React.Component {\n  componentDidMount(){\n    this.props.review && this.props.setFormDataForEdit(this.props.review)\n  }\n\n  componentDidUpdate(prevProps) {\n    this.props.review && !prevProps.review && this.props.setFormDataForEdit(this.props.review)\n  }\n\n  componentWillUnmount() {\n    this.props.resetReviewForm()\n  }\n\n  handleSubmit = (formData) => {\n    const { updateReview, review, history } = this.props\n    updateReview({\n      ...formData,\n      reviewId: review.id\n    }, history)\n  }\n\n  render() {\n    const { history, deleteReview, review, currentUserId } = this.props\n    const reviewId = review ? review.id : null\n    const concertId = review ? review.attributes.concert.id : null\n    const userId = review ? review.attributes.user.id : null\n\n    return (\n      currentUserId == userId ?\n        <Card>\n              <ReviewForm editMode handleSubmit={this.handleSubmit} />\n              <br/>\n              <Button onClick={()=>deleteReview(reviewId, history, concertId, userId)}>Delete this review</Button>\n        </Card> : <Card> <Card.Title>This is not your review to edit!</Card.Title></Card>\n    )\n  }\n};\n\nconst mapStateToProps = (state, ownProps) => {\n  const currentUserId = state.currentUser ? state.currentUser.id : \"\"\n  return ({\n    currentUserId\n  })\n}\n\n\nexport default connect(mapStateToProps, { updateReview, setFormDataForEdit, resetReviewForm, deleteReview })(EditReviewFormWrapper);\n"]},"metadata":{},"sourceType":"module"}