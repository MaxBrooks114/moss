{"ast":null,"code":"import _slicedToArray from \"/Users/maxbrooks/Development/code/moss/moss-client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/maxbrooks/Development/code/moss/moss-client/src/components/ConcertCard.js\";\nimport React from 'react';\nimport { Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { getConcerts, getConcert } from '../actions/concerts.js';\nimport { getConcertReviews } from '../actions/reviews.js';\nimport { withRouter } from 'react-router-dom';\n\nconst ConcertCard = () => {\n  const _useState = useState({\n    concert: {}\n  }),\n        _useState2 = _slicedToArray(_useState, 2),\n        concert = _useState2[0],\n        setConcert = _useState2[1];\n\n  return concert ? React.createElement(\"div\", {\n    className: \"ConcertCard\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14\n    },\n    __self: this\n  }, \"Date: \", concert.attributes.date), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15\n    },\n    __self: this\n  }, \"Artist: \"), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16\n    },\n    __self: this\n  }, \"Venue: \"), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17\n    },\n    __self: this\n  }, \"Aggregated Score: \"), React.createElement(Link, {\n    to: \"/concerts/\".concat(concert.id, \"/reviews\"),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  }, \" See all reviews for this concert\"), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  }), !!concert.reviews.find(rev => rev.attributes.user.id == userId) ? React.createElement(Link, {\n    to: \"/reviews/\".concat(concert.reviews.find(rev => rev.attributes.user.id == userId)),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }, \"Your Review\") : React.createElement(Link, {\n    to: \"/concerts/\".concat(concert.id, \"/reviews/new\"),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }, \"Add a review\")) : React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }, \" Maaaaan they ain't no concert here \");\n};\n\nconst mapStateToProps = (state, ownProps) => {\n  const userId = state.currentUser ? state.currentUser.id : \"\";\n  const concertId = ownProps.match.params.id;\n  return {\n    userId,\n    concertId,\n    concerts: state.concerts,\n    reviews: state.reviews,\n    concert: state.concert\n  };\n};\n\nexport default withRouter(connect(mapStateToProps, {\n  getConcerts,\n  getConcertReviews,\n  getConcert\n})(ConcertCard));","map":{"version":3,"sources":["/Users/maxbrooks/Development/code/moss/moss-client/src/components/ConcertCard.js"],"names":["React","Link","connect","getConcerts","getConcert","getConcertReviews","withRouter","ConcertCard","useState","concert","setConcert","attributes","date","id","reviews","find","rev","user","userId","mapStateToProps","state","ownProps","currentUser","concertId","match","params","concerts"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,IAAR,QAAmB,kBAAnB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,WAAT,EAAsBC,UAAtB,QAAwC,wBAAxC;AACA,SAASC,iBAAT,QAAkC,uBAAlC;AACA,SAASC,UAAT,QAA2B,kBAA3B;;AAGA,MAAMC,WAAW,GAAG,MAAM;AAAA,oBACGC,QAAQ,CAAC;AAACC,IAAAA,OAAO,EAAC;AAAT,GAAD,CADX;AAAA;AAAA,QACjBA,OADiB;AAAA,QACTC,UADS;;AAEtB,SACED,OAAO,GACL;AAAK,IAAA,SAAS,EAAG,aAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAAUA,OAAO,CAACE,UAAR,CAAmBC,IAA7B,CADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFF,EAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAHF,EAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BAJF,EAKE,oBAAC,IAAD;AAAM,IAAA,EAAE,sBAAgBH,OAAO,CAACI,EAAxB,aAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yCALF,EAKwF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALxF,EAMG,CAAC,CAACJ,OAAO,CAACK,OAAR,CAAgBC,IAAhB,CAAqBC,GAAG,IAAIA,GAAG,CAACL,UAAJ,CAAeM,IAAf,CAAoBJ,EAApB,IAA0BK,MAAtD,CAAF,GAAkE,oBAAC,IAAD;AAAM,IAAA,EAAE,qBAAcT,OAAO,CAACK,OAAR,CAAgBC,IAAhB,CAAqBC,GAAG,IAAIA,GAAG,CAACL,UAAJ,CAAeM,IAAf,CAAoBJ,EAApB,IAA0BK,MAAtD,CAAd,CAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAAlE,GAA6K,oBAAC,IAAD;AAAM,IAAA,EAAE,sBAAeT,OAAO,CAACI,EAAvB,iBAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBANhL,CADK,GAQI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4CATb;AAYC,CAdL;;AAiBA,MAAMM,eAAe,GAAG,CAACC,KAAD,EAAQC,QAAR,KAAqB;AAC3C,QAAMH,MAAM,GAAGE,KAAK,CAACE,WAAN,GAAoBF,KAAK,CAACE,WAAN,CAAkBT,EAAtC,GAA2C,EAA1D;AACA,QAAMU,SAAS,GAAGF,QAAQ,CAACG,KAAT,CAAeC,MAAf,CAAsBZ,EAAxC;AACA,SAAQ;AACNK,IAAAA,MADM;AAENK,IAAAA,SAFM;AAGNG,IAAAA,QAAQ,EAAEN,KAAK,CAACM,QAHV;AAINZ,IAAAA,OAAO,EAAEM,KAAK,CAACN,OAJT;AAKNL,IAAAA,OAAO,EAAEW,KAAK,CAACX;AALT,GAAR;AAUD,CAbD;;AAgBA,eAAeH,UAAU,CAACJ,OAAO,CAACiB,eAAD,EAAkB;AAAChB,EAAAA,WAAD;AAAcE,EAAAA,iBAAd;AAAiCD,EAAAA;AAAjC,CAAlB,CAAP,CAAuEG,WAAvE,CAAD,CAAzB","sourcesContent":["import React from 'react'\nimport {Link} from 'react-router-dom'\nimport { connect } from 'react-redux'\nimport { getConcerts, getConcert } from '../actions/concerts.js'\nimport { getConcertReviews } from '../actions/reviews.js'\nimport { withRouter } from 'react-router-dom'\n\n\nconst ConcertCard = () => {\n  const [concert,setConcert]=useState({concert:{}}) \n    return (\n      concert ?\n        <div className = \"ConcertCard\">\n          <p>Date: {concert.attributes.date}</p>\n          <p>Artist: {}</p>\n          <p>Venue: {}</p>\n          <p>Aggregated Score: {}</p>\n          <Link to ={`/concerts/${concert.id}/reviews`}> See all reviews for this concert</Link><br/>\n          {!!concert.reviews.find(rev => rev.attributes.user.id == userId) ? <Link to={`/reviews/${concert.reviews.find(rev => rev.attributes.user.id == userId)}`}>Your Review</Link>: <Link to={`/concerts/${concert.id}/reviews/new`}>Add a review</Link>}\n        </div> : <div> Maaaaan they ain't no concert here </div>\n      )\n\n    }\n\n\nconst mapStateToProps = (state, ownProps) => {\n  const userId = state.currentUser ? state.currentUser.id : \"\"\n  const concertId = ownProps.match.params.id\n  return ({\n    userId,\n    concertId,\n    concerts: state.concerts,\n    reviews: state.reviews,\n    concert: state.concert\n\n\n\n  })\n}\n\n\nexport default withRouter(connect(mapStateToProps, {getConcerts, getConcertReviews, getConcert})(ConcertCard))\n"]},"metadata":{},"sourceType":"module"}