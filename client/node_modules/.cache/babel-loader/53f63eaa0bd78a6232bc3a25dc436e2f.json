{"ast":null,"code":"import axios from 'axios';\nimport store from '../store';\nexport const setConcerts = concerts => {\n  return {\n    type: \"SET_CONCERTS\",\n    concerts\n  };\n};\nexport const clearConcerts = () => {\n  return {\n    type: \"CLEAR_CONCERTS\"\n  };\n};\nconst REACT_APP_BANDSINTOWN_APP_ID = process.env.REACT_APP_BANDSINTOWN_APP_ID;\nexport const getConcerts = query => {\n  return dispatch => {\n    dispatch({\n      type: 'LOADING_CONCERTS'\n    });\n    return axios.get(\"https://rest.bandsintown.com/artists/Kishi%20Bashi/events?app_id=\".concat(REACT_APP_BANDSINTOWN_APP_ID, \"&date=past\")).then(concerts => {\n      dispatch({\n        type: 'GET_CONCERTS',\n        concerts\n      });\n      dispatch(addReviewsToConcerts(concerts));\n    });\n  };\n};\nexport const saveConcert = concertData => {\n  return dispatch => {\n    const sendableConcertData = {\n      venue: concertData.venue.name,\n      artist: concertData.lineup[0],\n      date: concertData.datetime,\n      concert_api_id: parseInt(concertData.id, 10)\n    };\n    return fetch(\"http://localhost:3000/api/v1/concerts\", {\n      credentials: \"include\",\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(sendableConcertData)\n    }).then(r => r.json()).then(resp => {\n      if (resp.error) {\n        console.log(resp.error);\n      } else {\n        console.log(resp.data);\n      }\n    }).catch(console.log);\n  };\n};\nexport const addReviewsToConcerts = concerts => {\n  return (dispatch, getState) => {\n    const reviews = store.getState().reviews;\n    return concerts.data.map(concert => concert.reviews = reviews.filter(review => review.concert.id === concert.id));\n  };\n};","map":{"version":3,"sources":["/Users/maxbrooks/Development/code/moss/moss-client/src/actions/concerts.js"],"names":["axios","store","setConcerts","concerts","type","clearConcerts","REACT_APP_BANDSINTOWN_APP_ID","process","env","getConcerts","query","dispatch","get","then","addReviewsToConcerts","saveConcert","concertData","sendableConcertData","venue","name","artist","lineup","date","datetime","concert_api_id","parseInt","id","fetch","credentials","method","headers","body","JSON","stringify","r","json","resp","error","console","log","data","catch","getState","reviews","map","concert","filter","review"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,UAAlB;AAEA,OAAO,MAAMC,WAAW,GAAGC,QAAQ,IAAI;AACrC,SAAO;AACLC,IAAAA,IAAI,EAAE,cADD;AAELD,IAAAA;AAFK,GAAP;AAID,CALM;AAOP,OAAO,MAAME,aAAa,GAAG,MAAM;AACjC,SAAO;AACLD,IAAAA,IAAI,EAAE;AADD,GAAP;AAGD,CAJM;AAQP,MAAME,4BAA4B,GAAGC,OAAO,CAACC,GAAR,CAAYF,4BAAjD;AAEA,OAAO,MAAMG,WAAW,GAAIC,KAAD,IAAW;AACpC,SAAQC,QAAD,IAAc;AACnBA,IAAAA,QAAQ,CAAC;AAAEP,MAAAA,IAAI,EAAE;AAAR,KAAD,CAAR;AACA,WAAOJ,KAAK,CAACY,GAAN,4EAA8EN,4BAA9E,iBACJO,IADI,CACCV,QAAQ,IAAI;AACdQ,MAAAA,QAAQ,CAAC;AAAEP,QAAAA,IAAI,EAAE,cAAR;AAAwBD,QAAAA;AAAxB,OAAD,CAAR;AACAQ,MAAAA,QAAQ,CAACG,oBAAoB,CAACX,QAAD,CAArB,CAAR;AAAyC,KAHxC,CAAP;AAIC,GANH;AAOG,CARE;AAUP,OAAO,MAAMY,WAAW,GAAIC,WAAD,IAAiB;AACxC,SAAOL,QAAQ,IAAI;AACjB,UAAMM,mBAAmB,GAAG;AAC1BC,MAAAA,KAAK,EAAEF,WAAW,CAACE,KAAZ,CAAkBC,IADC;AAE1BC,MAAAA,MAAM,EAAEJ,WAAW,CAACK,MAAZ,CAAmB,CAAnB,CAFkB;AAG1BC,MAAAA,IAAI,EAAEN,WAAW,CAACO,QAHQ;AAI1BC,MAAAA,cAAc,EAAEC,QAAQ,CAACT,WAAW,CAACU,EAAb,EAAiB,EAAjB;AAJE,KAA5B;AAMA,WAAOC,KAAK,CAAC,uCAAD,EAA0C;AACpDC,MAAAA,WAAW,EAAE,SADuC;AAEpDC,MAAAA,MAAM,EAAE,MAF4C;AAGpDC,MAAAA,OAAO,EAAE;AACP,wBAAgB;AADT,OAH2C;AAMpDC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAehB,mBAAf;AAN8C,KAA1C,CAAL,CAQJJ,IARI,CAQCqB,CAAC,IAAIA,CAAC,CAACC,IAAF,EARN,EASJtB,IATI,CASCuB,IAAI,IAAI;AACZ,UAAIA,IAAI,CAACC,KAAT,EAAgB;AACdC,QAAAA,OAAO,CAACC,GAAR,CAAYH,IAAI,CAACC,KAAjB;AACD,OAFD,MAEO;AACLC,QAAAA,OAAO,CAACC,GAAR,CAAYH,IAAI,CAACI,IAAjB;AAED;AACF,KAhBI,EAiBJC,KAjBI,CAiBEH,OAAO,CAACC,GAjBV,CAAP;AAmBD,GA1BD;AA2BD,CA5BI;AA+BP,OAAO,MAAMzB,oBAAoB,GAAIX,QAAD,IAAc;AAChD,SAAO,CAACQ,QAAD,EAAW+B,QAAX,KAAwB;AAC7B,UAAMC,OAAO,GAAI1C,KAAK,CAACyC,QAAN,GAAiBC,OAAlC;AACA,WAAOxC,QAAQ,CAACqC,IAAT,CAAcI,GAAd,CAAkBC,OAAO,IAAIA,OAAO,CAACF,OAAR,GAAkBA,OAAO,CAACG,MAAR,CAAeC,MAAM,IAAIA,MAAM,CAACF,OAAP,CAAenB,EAAf,KAAsBmB,OAAO,CAACnB,EAAvD,CAA/C,CAAP;AACH,GAHC;AAID,CALM","sourcesContent":["import axios from 'axios';\nimport store from '../store';\n\nexport const setConcerts = concerts => {\n  return {\n    type: \"SET_CONCERTS\",\n    concerts\n  }\n}\n\nexport const clearConcerts = () => {\n  return {\n    type: \"CLEAR_CONCERTS\"\n  }\n}\n\n\n\nconst REACT_APP_BANDSINTOWN_APP_ID = process.env.REACT_APP_BANDSINTOWN_APP_ID ;\n\nexport const getConcerts = (query) => {\n  return (dispatch) => {\n    dispatch({ type: 'LOADING_CONCERTS' });\n    return axios.get(`https://rest.bandsintown.com/artists/Kishi%20Bashi/events?app_id=${REACT_APP_BANDSINTOWN_APP_ID}&date=past`)\n      .then(concerts => {\n          dispatch({ type: 'GET_CONCERTS', concerts })\n          dispatch(addReviewsToConcerts(concerts))})\n    }\n    }\n\nexport const saveConcert = (concertData) => {\n    return dispatch => {\n      const sendableConcertData = {\n        venue: concertData.venue.name,\n        artist: concertData.lineup[0],\n        date: concertData.datetime,\n        concert_api_id: parseInt(concertData.id, 10)\n      }\n      return fetch(\"http://localhost:3000/api/v1/concerts\", {\n        credentials: \"include\",\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify(sendableConcertData)\n      })\n        .then(r => r.json())\n        .then(resp => {\n          if (resp.error) {\n            console.log(resp.error)\n          } else {\n            console.log(resp.data)\n\n          }\n        })\n        .catch(console.log)\n\n    }\n  }\n\n\nexport const addReviewsToConcerts = (concerts) => {\n  return (dispatch, getState) => {\n    const reviews  = store.getState().reviews\n    return concerts.data.map(concert => concert.reviews = reviews.filter(review => review.concert.id === concert.id))\n}\n}\n"]},"metadata":{},"sourceType":"module"}