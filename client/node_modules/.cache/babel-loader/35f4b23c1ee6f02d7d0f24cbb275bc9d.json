{"ast":null,"code":"var _jsxFileName = \"/Users/maxbrooks/Development/code/moss/moss-client/src/components/reviews/ReviewCard.js\";\nimport React from 'react';\nimport { Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport { getUserReviews } from '../.././actions/reviews/reviews';\nimport Card from 'react-bootstrap/Card';\nimport Button from 'react-bootstrap/Button';\nimport ListGroup from 'react-bootstrap/ListGroup';\nimport { LinkContainer } from 'react-router-bootstrap';\n\nclass ReviewCard extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.capitalize = s => {\n      if (typeof s !== 'string') return '';\n      return s.charAt(0).toUpperCase() + s.slice(1);\n    };\n\n    this.state = {\n      likes: 0\n    };\n  }\n\n  render() {\n    return review ? React.createElement(Card, {\n      bg: \"secondary\",\n      text: \"black\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30\n      },\n      __self: this\n    }, React.createElement(Card.Body, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    }, React.createElement(Card.Title, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    }, capitalize(review.attributes.user.username), \"'s review of \", review.attributes.concert.name, React.createElement(LinkContainer, {\n      to: \"/concerts/\".concat(review.attributes.concert.id),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    }, React.createElement(Button, {\n      variant: \"success\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    }, \" See This Concert \")), \" \"), React.createElement(ListGroup, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }, React.createElement(ListGroup.Item, {\n      variant: \"info\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }, \"Performance: \", review.attributes.performance_score, \"/5\"), React.createElement(ListGroup.Item, {\n      variant: \"info\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }, \"Venue: \", review.attributes.venue_score, \"/5\"), React.createElement(ListGroup.Item, {\n      variant: \"info\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }, \"Sound: \", review.attributes.sound_score, \"/5\"), React.createElement(ListGroup.Item, {\n      variant: \"info\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }, \"Set: \", review.attributes.set_score, \"/5\"), React.createElement(ListGroup.Item, {\n      variant: \"info\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }, \"Price: \", review.attributes.price), React.createElement(ListGroup.Item, {\n      variant: \"info\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }, \" \", review.attributes.write_up), React.createElement(ListGroup.Item, {\n      variant: \"info\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }, \"Final Score: \", review.attributes.final_score, \"/5\")), review.attributes.user.id == currentUserId ? React.createElement(LinkContainer, {\n      to: \"/reviews/\".concat(review.id, \"/edit\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }, React.createElement(Button, {\n      variant: \"success\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }, \"Edit your review\")) : \"\", React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }), React.createElement(LinkContainer, {\n      to: \"/users/\".concat(review.attributes.user.id, \"/reviews\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }, React.createElement(Button, {\n      variant: \"success\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }, \" See all of \", review.attributes.user.username, \"'s reviews\")), React.createElement(Button, {\n      onClick: this.handleClick,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }, \" \", this.state.likes, \" \"))) : React.createElement(Card, {\n      bg: \"secondary\",\n      text: \"black\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, \" Maaaaan they ain't no review here \");\n  }\n\n}\n\nconst mapStateToProps = (state, ownProps) => {\n  const currentUserId = state.currentUser ? state.currentUser.id : \"\";\n  return {\n    currentUserId\n  };\n};\n\nexport default withRouter(connect(mapStateToProps, {\n  getUserReviews\n})(ReviewCard));","map":{"version":3,"sources":["/Users/maxbrooks/Development/code/moss/moss-client/src/components/reviews/ReviewCard.js"],"names":["React","Link","connect","withRouter","getUserReviews","Card","Button","ListGroup","LinkContainer","ReviewCard","Component","constructor","props","capitalize","s","charAt","toUpperCase","slice","state","likes","render","review","attributes","user","username","concert","name","id","performance_score","venue_score","sound_score","set_score","price","write_up","final_score","currentUserId","handleClick","mapStateToProps","ownProps","currentUser"],"mappings":"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","sourcesContent":["import React from 'react'\nimport {Link} from 'react-router-dom'\nimport { connect } from 'react-redux'\nimport { withRouter} from 'react-router-dom'\nimport { getUserReviews } from '../.././actions/reviews/reviews'\nimport Card from 'react-bootstrap/Card'\nimport Button from 'react-bootstrap/Button'\nimport ListGroup from 'react-bootstrap/ListGroup'\nimport { LinkContainer } from 'react-router-bootstrap'\n\n\nclass ReviewCard extends React.Component {\n\n  constructor(props) {\n    super(props)\n    this.state = {\n      likes: 0\n     }\n\n  }\n\n  capitalize = (s) => {\n  if (typeof s !== 'string') return ''\n  return s.charAt(0).toUpperCase() + s.slice(1)\n}\n\nrender () {\n  return (\n    review ?\n      <Card bg=\"secondary\" text=\"black\">\n        <Card.Body>\n          <Card.Title>{capitalize(review.attributes.user.username)}'s review of {review.attributes.concert.name}\n          <LinkContainer to={`/concerts/${review.attributes.concert.id}`}>\n            <Button variant=\"success\"> See This Concert </Button>\n          </LinkContainer> </Card.Title>\n          <ListGroup>\n            <ListGroup.Item  variant=\"info\">Performance: {review.attributes.performance_score}/5</ListGroup.Item>\n            <ListGroup.Item  variant=\"info\">Venue: {review.attributes.venue_score}/5</ListGroup.Item>\n            <ListGroup.Item  variant=\"info\">Sound: {review.attributes.sound_score}/5</ListGroup.Item>\n            <ListGroup.Item  variant=\"info\">Set: {review.attributes.set_score}/5</ListGroup.Item>\n            <ListGroup.Item  variant=\"info\">Price: {review.attributes.price}</ListGroup.Item>\n            <ListGroup.Item  variant=\"info\"> {review.attributes.write_up}</ListGroup.Item>\n            <ListGroup.Item  variant=\"info\">Final Score: {review.attributes.final_score}/5</ListGroup.Item>\n          </ListGroup>\n          {review.attributes.user.id == currentUserId ? <LinkContainer to={`/reviews/${review.id}/edit`}>\n            <Button variant=\"success\">Edit your review</Button>\n            </LinkContainer> : \"\"}<br/>\n          <LinkContainer to={`/users/${review.attributes.user.id}/reviews`}>\n            <Button variant=\"success\"> See all of {review.attributes.user.username}'s reviews</Button>\n          </LinkContainer>\n            <Button onClick={this.handleClick}> {this.state.likes} </Button>\n\n        </Card.Body>\n\n      </Card> : <Card bg=\"secondary\" text=\"black\"> Maaaaan they ain't no review here </Card>\n  )\n\n}\n}\n\n\nconst mapStateToProps = (state, ownProps) => {\n  const currentUserId = state.currentUser ? state.currentUser.id : \"\"\n  return ({\n    currentUserId,\n\n  })\n}\n\nexport default withRouter(connect(mapStateToProps, {getUserReviews})(ReviewCard))\n"]},"metadata":{},"sourceType":"module"}