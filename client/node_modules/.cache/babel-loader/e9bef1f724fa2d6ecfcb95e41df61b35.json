{"ast":null,"code":"var _jsxFileName = \"/Users/maxbrooks/Development/code/moss/moss-client/src/components/ConcertCard.js\";\nimport React from 'react';\nimport { Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { getConcerts, getConcert } from '../actions/concerts.js';\nimport { getConcertReviews } from '../actions/reviews.js';\nimport { withRouter } from 'react-router-dom';\n\nclass ConcertCard extends React.Component {\n  componentWillMount() {\n    this.props.getConcert(this.props.concertId);\n  } // <Link to ={`/concerts/${concert.id}/reviews`}> See all reviews for this concert</Link><br/>\n  // {!!concert.reviews.find(rev => rev.attributes.user.id == userId) ? <Link to={`/reviews/${concert.reviews.find(rev => rev.attributes.user.id == userId)}`}>Your Review</Link>: <Link to={`/concerts/${concert.id}/reviews/new`}>Add a review</Link> }\n\n\n  render() {\n    const _this$props = this.props,\n          concert = _this$props.concert,\n          userId = _this$props.userId,\n          saveConcert = _this$props.saveConcert;\n    return concert ? React.createElement(\"div\", {\n      className: \"ConcertCard\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25\n      },\n      __self: this\n    }, \"Date: \"), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26\n      },\n      __self: this\n    }, \"Artist: \"), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27\n      },\n      __self: this\n    }, \"Venue: \"), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28\n      },\n      __self: this\n    }, \"Aggregated Score: \")) : React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    }, \" Maaaaan they ain't no concert here \");\n  }\n\n}\n\nconst mapStateToProps = (state, ownProps) => {\n  const userId = state.currentUser ? state.currentUser.id : \"\";\n  const concertId = ownProps.match.params.id;\n  return {\n    userId,\n    concertId,\n    concerts: state.concerts,\n    reviews: state.reviews,\n    concert: state.concert\n  };\n};\n\nexport default withRouter(connect(mapStateToProps, {\n  getConcerts,\n  getConcertReviews,\n  getConcert\n})(ConcertCard));","map":{"version":3,"sources":["/Users/maxbrooks/Development/code/moss/moss-client/src/components/ConcertCard.js"],"names":["React","Link","connect","getConcerts","getConcert","getConcertReviews","withRouter","ConcertCard","Component","componentWillMount","props","concertId","render","concert","userId","saveConcert","mapStateToProps","state","ownProps","currentUser","id","match","params","concerts","reviews"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,IAAR,QAAmB,kBAAnB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,WAAT,EAAsBC,UAAtB,QAAwC,wBAAxC;AACA,SAASC,iBAAT,QAAkC,uBAAlC;AACA,SAASC,UAAT,QAA2B,kBAA3B;;AAGA,MAAMC,WAAN,SAA0BP,KAAK,CAACQ,SAAhC,CAA0C;AAExCC,EAAAA,kBAAkB,GAAE;AAClB,SAAKC,KAAL,CAAWN,UAAX,CAAsB,KAAKM,KAAL,CAAWC,SAAjC;AACD,GAJuC,CAMxC;AACA;;;AAIAC,EAAAA,MAAM,GAAI;AAAA,wBACiC,KAAKF,KADtC;AAAA,UACAG,OADA,eACAA,OADA;AAAA,UACSC,MADT,eACSA,MADT;AAAA,UACiBC,WADjB,eACiBA,WADjB;AAER,WACEF,OAAO,GACL;AAAK,MAAA,SAAS,EAAG,aAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFF,EAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAHF,EAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BAJF,CADK,GASM;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8CAVf;AAaC;;AA1BqC;;AA6B1C,MAAMG,eAAe,GAAG,CAACC,KAAD,EAAQC,QAAR,KAAqB;AAC3C,QAAMJ,MAAM,GAAGG,KAAK,CAACE,WAAN,GAAoBF,KAAK,CAACE,WAAN,CAAkBC,EAAtC,GAA2C,EAA1D;AACA,QAAMT,SAAS,GAAGO,QAAQ,CAACG,KAAT,CAAeC,MAAf,CAAsBF,EAAxC;AACA,SAAQ;AACNN,IAAAA,MADM;AAENH,IAAAA,SAFM;AAGNY,IAAAA,QAAQ,EAAEN,KAAK,CAACM,QAHV;AAINC,IAAAA,OAAO,EAAEP,KAAK,CAACO,OAJT;AAKNX,IAAAA,OAAO,EAAEI,KAAK,CAACJ;AALT,GAAR;AAUD,CAbD;;AAgBA,eAAeP,UAAU,CAACJ,OAAO,CAACc,eAAD,EAAkB;AAACb,EAAAA,WAAD;AAAcE,EAAAA,iBAAd;AAAiCD,EAAAA;AAAjC,CAAlB,CAAP,CAAuEG,WAAvE,CAAD,CAAzB","sourcesContent":["import React from 'react'\nimport {Link} from 'react-router-dom'\nimport { connect } from 'react-redux'\nimport { getConcerts, getConcert } from '../actions/concerts.js'\nimport { getConcertReviews } from '../actions/reviews.js'\nimport { withRouter } from 'react-router-dom'\n\n\nclass ConcertCard extends React.Component {\n\n  componentWillMount(){\n    this.props.getConcert(this.props.concertId)\n  }\n\n  // <Link to ={`/concerts/${concert.id}/reviews`}> See all reviews for this concert</Link><br/>\n  // {!!concert.reviews.find(rev => rev.attributes.user.id == userId) ? <Link to={`/reviews/${concert.reviews.find(rev => rev.attributes.user.id == userId)}`}>Your Review</Link>: <Link to={`/concerts/${concert.id}/reviews/new`}>Add a review</Link> }\n\n\n\n  render () {\n    const { concert, userId, saveConcert } = this.props\n    return (\n      concert ?\n        <div className = \"ConcertCard\">\n          <p>Date: {}</p>\n          <p>Artist: {}</p>\n          <p>Venue: {}</p>\n          <p>Aggregated Score: {}</p>\n\n\n\n          </div> : <div> Maaaaan they ain't no concert here </div>\n      )\n\n    }\n  }\n\nconst mapStateToProps = (state, ownProps) => {\n  const userId = state.currentUser ? state.currentUser.id : \"\"\n  const concertId = ownProps.match.params.id\n  return ({\n    userId,\n    concertId,\n    concerts: state.concerts,\n    reviews: state.reviews,\n    concert: state.concert\n\n\n\n  })\n}\n\n\nexport default withRouter(connect(mapStateToProps, {getConcerts, getConcertReviews, getConcert})(ConcertCard))\n"]},"metadata":{},"sourceType":"module"}