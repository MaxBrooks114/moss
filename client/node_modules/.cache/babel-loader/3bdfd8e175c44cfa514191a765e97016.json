{"ast":null,"code":"var _jsxFileName = \"/Users/maxbrooks/Development/code/moss/moss-client/src/App.js\";\nimport React from 'react';\nimport './App.css';\nimport { connect } from 'react-redux';\nimport { getCurrentUser } from \"./actions/currentUser.js\";\nimport { getConcerts, addReviewsToConcerts } from './actions/concerts';\nimport { getReviews, getUserReviews } from './actions/reviews.js';\nimport NavBar from './components/NavBar';\nimport Login from './components/Login';\nimport Signup from './components/Signup';\nimport ConcertsList from './components/ConcertsList';\nimport CurrentUserConcerts from './components/CurrentUserConcerts';\nimport Home from './components/Home';\nimport NewReviewFormWrapper from './components/NewReviewFormWrapper';\nimport EditReviewFormWrapper from './components/EditReviewFormWrapper';\nimport ConcertFetcher from './components/ConcertFetcher';\nimport Concerts from './components/Concerts';\nimport Reviews from './components/Reviews';\nimport ReviewCard from './components/ReviewCard.js';\nimport ConcertSearchForm from './components/ConcertSearchForm';\nimport { Route, Switch, withRouter } from 'react-router-dom';\n\nclass App extends React.Component {\n  componentDidMount(ownProps) {\n    this.props.getCurrentUser();\n  }\n\n  render() {\n    const _this$props = this.props,\n          loggedIn = _this$props.loggedIn,\n          userId = _this$props.userId,\n          concerts = _this$props.concerts,\n          reviews = _this$props.reviews;\n    return React.createElement(\"div\", {\n      className: \"App\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    }, loggedIn ? React.createElement(NavBar, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    }) : React.createElement(Home, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    }), React.createElement(Switch, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }, React.createElement(Route, {\n      exact: true,\n      path: \"/signup\",\n      render: ({\n        history\n      }) => React.createElement(Signup, {\n        history: history,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37\n        },\n        __self: this\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }), React.createElement(Route, {\n      exact: true,\n      path: \"/login\",\n      component: Login,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }), React.createElement(Route, {\n      exact: true,\n      path: \"/concerts\",\n      component: Concerts,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }), React.createElement(Route, {\n      exact: true,\n      path: \"/users/:id/concerts\",\n      component: CurrentUserConcerts,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }), React.createElement(Route, {\n      exact: true,\n      path: \"/concerts/:id\",\n      component: ConcertFetcher,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }), React.createElement(Route, {\n      exact: true,\n      path: \"/reviews/:id\",\n      render: props => {\n        const review = reviews.find(review => review.id === props.match.params.id);\n        const userId = props.userId;\n        return React.createElement(ReviewCard, Object.assign({\n          review: review,\n          userId: userId\n        }, props, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 45\n          },\n          __self: this\n        }));\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }), React.createElement(Route, {\n      exact: true,\n      path: \"/concerts/:id/reviews/new\",\n      component: NewReviewFormWrapper,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }), React.createElement(Route, {\n      exact: true,\n      path: \"/concerts/:id/reviews\",\n      component: Reviews,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }), React.createElement(Route, {\n      exact: true,\n      path: \"/reviews/:id/edit\",\n      render: props => {\n        const review = reviews.find(review => review.id === props.match.params.id);\n        return React.createElement(EditReviewFormWrapper, Object.assign({\n          review: review\n        }, props, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 52\n          },\n          __self: this\n        }));\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }), React.createElement(Route, {\n      exact: true,\n      path: \"/reviews\",\n      component: Reviews,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }), React.createElement(Route, {\n      exact: true,\n      path: \"/users/:id/reviews\",\n      component: Reviews,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    })));\n  }\n\n}\n\nconst mapStateToProps = (state, ownProps) => {\n  const userId = state.currentUser ? state.currentUser.id : \"\";\n  return {\n    loggedIn: !!state.currentUser,\n    concerts: state.concerts,\n    userId,\n    reviews: state.reviews\n  };\n};\n\nexport default withRouter(connect(mapStateToProps, {\n  getCurrentUser,\n  getReviews,\n  getUserReviews,\n  getConcerts,\n  addReviewsToConcerts\n})(App));","map":{"version":3,"sources":["/Users/maxbrooks/Development/code/moss/moss-client/src/App.js"],"names":["React","connect","getCurrentUser","getConcerts","addReviewsToConcerts","getReviews","getUserReviews","NavBar","Login","Signup","ConcertsList","CurrentUserConcerts","Home","NewReviewFormWrapper","EditReviewFormWrapper","ConcertFetcher","Concerts","Reviews","ReviewCard","ConcertSearchForm","Route","Switch","withRouter","App","Component","componentDidMount","ownProps","props","render","loggedIn","userId","concerts","reviews","history","review","find","id","match","params","mapStateToProps","state","currentUser"],"mappings":"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","sourcesContent":["import React from 'react';\nimport './App.css';\nimport { connect } from 'react-redux'\nimport { getCurrentUser } from \"./actions/currentUser.js\"\nimport { getConcerts, addReviewsToConcerts } from './actions/concerts'\nimport { getReviews, getUserReviews} from './actions/reviews.js'\nimport NavBar from './components/NavBar'\nimport Login  from './components/Login'\nimport Signup from './components/Signup'\nimport ConcertsList from './components/ConcertsList'\nimport CurrentUserConcerts  from './components/CurrentUserConcerts'\nimport Home from './components/Home'\nimport NewReviewFormWrapper from './components/NewReviewFormWrapper'\nimport EditReviewFormWrapper from './components/EditReviewFormWrapper'\nimport ConcertFetcher from './components/ConcertFetcher'\nimport Concerts from './components/Concerts'\nimport Reviews from './components/Reviews'\nimport ReviewCard from './components/ReviewCard.js'\nimport ConcertSearchForm from './components/ConcertSearchForm'\nimport { Route, Switch, withRouter } from 'react-router-dom'\n\n\n\n\nclass App extends React.Component {\n  componentDidMount(ownProps){\n    this.props.getCurrentUser()\n\n  }\n  render() {\n    const { loggedIn, userId, concerts, reviews } = this.props\n    return (\n      <div className=\"App\">\n        { loggedIn ? <NavBar/> : <Home/> }\n\n        <Switch>\n          <Route exact path='/signup' render={({history})=><Signup history={history}/>}/>\n          <Route exact path='/login' component={Login}/>\n          <Route exact path='/concerts' component={Concerts}/>\n          <Route exact path='/users/:id/concerts' component={CurrentUserConcerts}/>\n          <Route exact path='/concerts/:id' component={ConcertFetcher}/>\n          <Route exact path='/reviews/:id' render={props => {\n              const review = reviews.find(review => review.id === props.match.params.id)\n              const userId = props.userId\n              return <ReviewCard review={review} userId={userId} {...props}/>\n            }\n          }/>\n          <Route exact path='/concerts/:id/reviews/new' component={NewReviewFormWrapper}/>\n          <Route exact path='/concerts/:id/reviews' component={Reviews}/>\n          <Route exact path='/reviews/:id/edit' render={props => {\n             const review = reviews.find(review => review.id === props.match.params.id)\n             return <EditReviewFormWrapper review={review} {...props}/>\n           }\n         }/>\n         <Route exact path='/reviews' component={Reviews}/>\n         <Route exact path='/users/:id/reviews' component={Reviews}/>\n        </Switch>\n\n      </div>\n    );\n\n  }\n}\n\nconst mapStateToProps = (state, ownProps) => {\n  const userId = state.currentUser ? state.currentUser.id : \"\"\n  return ({\n    loggedIn: !!state.currentUser,\n    concerts: state.concerts,\n    userId,\n    reviews: state.reviews\n  })\n\n}\n\nexport default withRouter(connect(mapStateToProps, { getCurrentUser, getReviews, getUserReviews, getConcerts, addReviewsToConcerts })(App));\n"]},"metadata":{},"sourceType":"module"}